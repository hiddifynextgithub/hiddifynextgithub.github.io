<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifynextgithub.github.io/news/article-45514.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <title>smdms超市订单管理系统之登录功能</title>
        <meta name="description" content="Supermarket order management system    创建数据库   数据库代码放置如下    点击查看数据库address代码 CREATE TABLE `smbms_add" />
        <link rel="icon" href="/assets/website/img/hiddifynextgithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="HiddifyNextGithub免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hiddifynextgithub.github.io/news/article-45514.htm" />
    <meta property="og:site_name" content="HiddifyNextGithub免费节点官网" />
    <meta property="og:title" content="smdms超市订单管理系统之登录功能" />
    <meta property="og:image" content="https://hiddifynextgithub.github.io/uploads/20240808-2/a078b706463e61308eb65e9facf0ff7b.webp" />
        <meta property="og:release_date" content="2025-01-24T09:28:10" />
    <meta property="og:updated_time" content="2025-01-24T09:28:10" />
        <meta property="og:description" content="Supermarket order management system    创建数据库   数据库代码放置如下    点击查看数据库address代码 CREATE TABLE `smbms_add" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="smdms超市订单管理系统之登录功能">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://cdn.bootcdn.net">
    <link rel="dns-prefetch" href="https://fonts.gstatic.com">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/10.3.1/swiper-bundle.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/hiddifynextgithub/vendor.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/hiddifynextgithub/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LL7EDWRR8Q"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LL7EDWRR8Q');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol xmlns="http://www.w3.org/2000/svg" id="navbar-icon" viewBox="0 0 16 16">
            <path d="M14 10.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 .5-.5zm0-3a.5.5 0 0 0-.5-.5h-7a.5.5 0 0 0 0 1h7a.5.5 0 0 0 .5-.5zm0-3a.5.5 0 0 0-.5-.5h-11a.5.5 0 0 0 0 1h11a.5.5 0 0 0 .5-.5z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="facebook" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12c0 4.84 3.44 8.87 8 9.8V15H8v-3h2V9.5C10 7.57 11.57 6 13.5 6H16v3h-2c-.55 0-1 .45-1 1v2h3v3h-3v6.95c5.05-.5 9-4.76 9-9.95z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="youtube" viewBox="0 0 32 32">
            <path fill="currentColor" d="M29.41 9.26a3.5 3.5 0 0 0-2.47-2.47C24.76 6.2 16 6.2 16 6.2s-8.76 0-10.94.59a3.5 3.5 0 0 0-2.47 2.47A36.13 36.13 0 0 0 2 16a36.13 36.13 0 0 0 .59 6.74a3.5 3.5 0 0 0 2.47 2.47c2.18.59 10.94.59 10.94.59s8.76 0 10.94-.59a3.5 3.5 0 0 0 2.47-2.47A36.13 36.13 0 0 0 30 16a36.13 36.13 0 0 0-.59-6.74ZM13.2 20.2v-8.4l7.27 4.2Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="instagram" viewBox="0 0 256 256">
            <path fill="currentColor" d="M128 80a48 48 0 1 0 48 48a48.05 48.05 0 0 0-48-48Zm0 80a32 32 0 1 1 32-32a32 32 0 0 1-32 32Zm48-136H80a56.06 56.06 0 0 0-56 56v96a56.06 56.06 0 0 0 56 56h96a56.06 56.06 0 0 0 56-56V80a56.06 56.06 0 0 0-56-56Zm40 152a40 40 0 0 1-40 40H80a40 40 0 0 1-40-40V80a40 40 0 0 1 40-40h96a40 40 0 0 1 40 40ZM192 76a12 12 0 1 1-12-12a12 12 0 0 1 12 12Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="twitter" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22.46 6c-.77.35-1.6.58-2.46.69c.88-.53 1.56-1.37 1.88-2.38c-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29c0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15c0 1.49.75 2.81 1.91 3.56c-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07a4.28 4.28 0 0 0 4 2.98a8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21C16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56c.84-.6 1.56-1.36 2.14-2.23Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="linkedin" viewBox="0 0 512 512">
            <path fill="currentColor" d="M444.17 32H70.28C49.85 32 32 46.7 32 66.89v374.72C32 461.91 49.85 480 70.28 480h373.78c20.54 0 35.94-18.21 35.94-38.39V66.89C480.12 46.7 464.6 32 444.17 32Zm-273.3 373.43h-64.18V205.88h64.18ZM141 175.54h-.46c-20.54 0-33.84-15.29-33.84-34.43c0-19.49 13.65-34.42 34.65-34.42s33.85 14.82 34.31 34.42c-.01 19.14-13.31 34.43-34.66 34.43Zm264.43 229.89h-64.18V296.32c0-26.14-9.34-44-32.56-44c-17.74 0-28.24 12-32.91 23.69c-1.75 4.2-2.22 9.92-2.22 15.76v113.66h-64.18V205.88h64.18v27.77c9.34-13.3 23.93-32.44 57.88-32.44c42.13 0 74 27.77 74 87.64Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="arrow-down" viewBox="0 0 32 32">
            <path fill="currentColor" d="M24.59 16.59L17 24.17V4h-2v20.17l-7.59-7.58L6 18l10 10l10-10l-1.41-1.41z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="cart" viewBox="0 0 512 512">
            <path fill="currentColor" d="M160 96.039v32h304v63.345l-35.5 112.655H149.932L109.932 16H16v32h66.068l40 288.039h329.9L496 196.306V96.039H160zm16.984 272.305a64.073 64.073 0 0 0-64 64a64 64 0 0 0 128 0a64.072 64.072 0 0 0-64-64Zm0 96a32 32 0 1 1 32-32a32.038 32.038 0 0 1-32 32Zm224-96a64.073 64.073 0 0 0-64 64a64 64 0 0 0 128 0a64.072 64.072 0 0 0-64-64Zm0 96a32 32 0 1 1 32-32a32.038 32.038 0 0 1-32 32Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="balloon" viewBox="0 0 24 24">
            <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                <path d="M8 16.607c1.15.86 2.518 1.38 4 1.393c4.142.034 7.594-3.92 7.56-8.196C19.527 5.53 16.142 2.034 12 2c-4.142-.034-7.473 3.404-7.44 7.68A8.88 8.88 0 0 0 5.244 13" />
                <path d="M15.5 9a3.035 3.035 0 0 0-3-3M12 20.35c.321 0 .482 0 .593-.022c.654-.128 1.051-.772.858-1.39c-.033-.105-.109-.242-.261-.515M12 20.35c-.321 0-.482 0-.593-.022c-.654-.128-1.051-.772-.858-1.39c.033-.105.109-.242.261-.515M12 20.35v2.15" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="bag-heart" viewBox="0 0 24 24">
            <g fill="none">
                <path fill="currentColor" d="m12 12.191l-.519.542a.75.75 0 0 0 1.038 0L12 12.191Zm-.957 3.675l-.444.604l.444-.604Zm1.914 0l-.444-.605l.444.605Zm-.957.462v.75v-.75Zm-.514-1.067c-.417-.307-.878-.69-1.227-1.093c-.368-.426-.509-.757-.509-.971h-1.5c0 .77.441 1.45.875 1.952c.453.525 1.014.984 1.474 1.321l.887-1.21ZM9.75 13.197c0-.576.263-.827.492-.907c.25-.088.714-.06 1.24.443l1.037-1.083c-.825-.79-1.861-1.096-2.773-.776c-.934.327-1.496 1.226-1.496 2.323h1.5Zm3.65 3.273c.46-.337 1.022-.796 1.475-1.32c.434-.502.875-1.183.875-1.953h-1.5c0 .214-.141.545-.51.971c-.348.403-.809.786-1.226 1.093l.887 1.21Zm2.35-3.273c0-1.097-.563-1.996-1.496-2.323c-.912-.32-1.948-.014-2.773.776l1.038 1.083c.525-.503.989-.531 1.24-.443c.228.08.491.33.491.907h1.5ZM10.6 16.47c.368.27.782.608 1.4.608v-1.5c-.024 0-.04 0-.094-.03a4 4 0 0 1-.42-.287l-.887 1.21Zm1.914-1.21a4 4 0 0 1-.42.289c-.054.029-.07.029-.094.029v1.5c.618 0 1.032-.337 1.4-.608l-.886-1.21Z" />
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M9 6V5a3 3 0 1 1 6 0v1m5.224 6.526c-.586-3.121-.878-4.682-1.99-5.604C17.125 6 15.537 6 12.36 6h-.72c-3.176 0-4.764 0-5.875.922c-1.11.922-1.403 2.483-1.989 5.604c-.823 4.389-1.234 6.583-.034 8.029C4.942 22 7.174 22 11.639 22h.722c4.465 0 6.698 0 7.897-1.445c.696-.84.85-1.93.696-3.555" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="handiplast" viewBox="0 0 24 24">
            <g fill="none">
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M13.5 7.642L9.071 3.213a4.142 4.142 0 0 0-5.858 5.858L14.93 20.787a4.142 4.142 0 0 0 5.858-5.858l-4.358-4.358" />
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="m12 17.858l-2.929 2.929A4.142 4.142 0 0 1 2.596 20m3.546-8l-2.929 2.929c-.322.322-.58.685-.774 1.071M12 6.142l2.929-2.929a4.142 4.142 0 1 1 5.858 5.858L17.857 12" />
                <path fill="currentColor" d="M15.841 12.871a.788.788 0 1 1-1.114 1.114a.788.788 0 0 1 1.114-1.114Zm-3.712-3.712a.787.787 0 1 0-1.114 1.114a.787.787 0 0 0 1.114-1.114Zm4.641 6.497a.787.787 0 1 1-1.114 1.114a.787.787 0 0 1 1.114-1.114ZM9.345 8.23A.788.788 0 1 0 8.23 9.346A.788.788 0 0 0 9.345 8.23Zm3.712 3.713a.787.787 0 1 1-1.113 1.114a.787.787 0 0 1 1.113-1.114Zm.928 2.785a.788.788 0 1 1-1.114 1.113a.788.788 0 0 1 1.114-1.113Zm-3.712-3.713a.787.787 0 1 0-1.114 1.114a.787.787 0 0 0 1.114-1.114Z" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="star-fill" viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="star-empty" viewBox="0 0 16 16">
            <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="play" viewBox="0 0 32 32">
            <path fill="currentColor" d="M7 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.482-.876l20 11a1 1 0 0 1 0 1.752l-20 11A1 1 0 0 1 7 28ZM8 6.69v18.62L24.925 16Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="call-chat" viewBox="0 0 24 24">
            <path fill="currentColor" fill-rule="evenodd" d="M17 2.75a4.25 4.25 0 0 0-3.807 6.142c.16.32.225.71.12 1.102l-.253.946l.946-.253a1.567 1.567 0 0 1 1.102.12A4.25 4.25 0 1 0 17 2.75ZM11.25 7a5.75 5.75 0 1 1 3.19 5.15a.126.126 0 0 0-.04-.013h-.007l-1.112.297a1.4 1.4 0 0 1-1.715-1.714l.298-1.113V9.6a.126.126 0 0 0-.014-.04a5.73 5.73 0 0 1-.6-2.56ZM3.718 4.092c1.226-1.29 3.254-1.049 4.268.385l1.26 1.783c.811 1.147.743 2.74-.225 3.76l-.245.257c0 .002 0 .004-.002.006c-.013.037-.045.152-.013.372c.067.456.418 1.381 1.846 2.884c1.432 1.508 2.3 1.864 2.703 1.929a.608.608 0 0 0 .294-.007l.408-.43c.874-.92 2.236-1.101 3.335-.469l1.91 1.1c1.633.94 2.013 3.239.708 4.613l-1.42 1.495c-.443.467-1.048.866-1.795.94c-1.824.18-6.049-.055-10.478-4.718c-4.134-4.352-4.919-8.137-5.018-9.986c-.049-.914.358-1.697.894-2.261l.544.516l-.544-.516l1.57-1.653Zm3.043 1.25c-.512-.724-1.433-.767-1.956-.217l-1.57 1.653c-.33.349-.505.748-.483 1.148c.08 1.51.731 4.952 4.607 9.033c4.064 4.279 7.809 4.4 9.244 4.258c.283-.028.575-.186.854-.48l1.42-1.495c.614-.645.453-1.808-.368-2.28l-1.91-1.1c-.513-.295-1.114-.204-1.499.202l-.455.48l-.544-.517c.543.517.543.517.542.518l-.001.002l-.003.003l-.007.006l-.014.014a1.003 1.003 0 0 1-.136.112c-.08.057-.186.12-.321.172c-.276.11-.64.168-1.091.095c-.878-.143-2.028-.773-3.55-2.377c-1.528-1.608-2.113-2.807-2.243-3.7c-.067-.454-.014-.817.084-1.092a1.592 1.592 0 0 1 .23-.427l.03-.037l.014-.015l.006-.006l.003-.003l.002-.002s.001-.001.545.515l-.544-.516l.287-.302c.445-.47.51-1.264.088-1.86L6.76 5.342Z" clip-rule="evenodd" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="mail" viewBox="0 0 21 21">
            <g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3.5 6.5v8a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2h-10a2 2 0 0 0-2 2z" />
                <path d="m5.5 7.5l5 3l5-3" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="location" viewBox="0 0 24 24">
            <path fill="currentColor" fill-rule="evenodd" d="M5.25 7.7c0-3.598 3.059-6.45 6.75-6.45c3.608 0 6.612 2.725 6.745 6.208l.478.16c.463.153.87.289 1.191.439c.348.162.667.37.911.709c.244.338.341.707.385 1.088c.04.353.04.78.04 1.269v5.748c0 .61 0 1.13-.047 1.547c-.05.438-.161.87-.463 1.237a2.25 2.25 0 0 1-.62.525c-.412.237-.855.276-1.296.253c-.42-.022-.933-.107-1.534-.208l-.041-.007c-1.293-.215-1.814-.296-2.322-.254a4.3 4.3 0 0 0-.552.083c-.498.109-.976.342-2.159.933l-.122.061c-1.383.692-2.234 1.118-3.154 1.251c-.276.04-.555.06-.835.06c-.928-.002-1.825-.301-3.28-.786a73.75 73.75 0 0 1-.127-.043l-.384-.128l-.037-.012c-.463-.154-.87-.29-1.191-.44c-.348-.162-.667-.37-.911-.709c-.244-.338-.341-.707-.385-1.088c-.04-.353-.04-.78-.04-1.269v-5.02c0-.786 0-1.448.067-1.967c.07-.542.23-1.072.666-1.47a2.25 2.25 0 0 1 .42-.304c.517-.287 1.07-.27 1.605-.166c.11.021.223.047.342.078c-.066-.446-.1-.89-.1-1.328Zm.499 3.01a9.414 9.414 0 0 0-1.028-.288c-.395-.077-.525-.03-.586.004a.747.747 0 0 0-.14.101c-.053.048-.138.156-.19.556c-.053.41-.055.974-.055 1.825v4.93c0 .539.001.88.03 1.138c.028.238.072.327.112.381c.039.055.109.125.326.226c.236.11.56.219 1.07.39l.384.127c1.624.541 2.279.75 2.936.752c.207 0 .413-.015.617-.044c.65-.094 1.276-.397 2.82-1.17l.093-.046c1.06-.53 1.714-.857 2.417-1.01c.246-.054.496-.092.747-.113c.717-.06 1.432.06 2.593.253l.1.017c.655.109 1.083.18 1.407.196c.312.016.419-.025.471-.055a.749.749 0 0 0 .207-.175c.039-.047.097-.146.132-.456c.037-.323.038-.757.038-1.42v-5.667c0-.539-.001-.88-.03-1.138c-.028-.238-.072-.327-.112-.381c-.039-.055-.109-.125-.326-.226c-.236-.11-.56-.219-1.07-.39l-.06-.019a10.701 10.701 0 0 1-1.335 3.788c-.912 1.568-2.247 2.934-3.92 3.663a3.505 3.505 0 0 1-2.794 0c-1.673-.73-3.008-2.095-3.92-3.663a10.856 10.856 0 0 1-.934-2.087ZM12 2.75c-2.936 0-5.25 2.252-5.25 4.95c0 1.418.437 2.98 1.23 4.341c.791 1.362 1.908 2.47 3.223 3.044c.505.22 1.089.22 1.594 0c1.316-.574 2.432-1.682 3.224-3.044c.792-1.36 1.229-2.923 1.229-4.34c0-2.699-2.314-4.951-5.25-4.951Zm0 4a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5ZM9.25 8a2.75 2.75 0 1 1 5.5 0a2.75 2.75 0 0 1-5.5 0Z" clip-rule="evenodd" />
        </symbol>
    </svg>
    <header id="header" class="site-header position-fixed z-2 w-100 border-bottom mb-5">
        <nav id="header-nav" class="navbar navbar-expand-lg py-3">
            <div class="container-lg">
                                <a class="navbar-brand pb-4" href="/">
                    <span>Hiddify Next Github</span>
                </a>
                                <button class="navbar-toggler d-flex d-lg-none order-3 p-2 border-0 shadow-none bg-white" type="button" data-bs-toggle="offcanvas" data-bs-target="#bdNavbar" aria-controls="bdNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <svg class="navbar-icon" width="50" height="50">
                        <use xlink:href="#navbar-icon"></use>
                    </svg>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="bdNavbar" aria-labelledby="bdNavbarOffcanvasLabel">
                    <div class="offcanvas-header px-4 pb-0">
                        <button type="button" class="btn-close btn-close-black" data-bs-dismiss="offcanvas" aria-label="Close" data-bs-target="#bdNavbar"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav scrollspy-nav justify-content-end flex-grow-1 gap-lg-5 pe-3">
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/news/">新闻资讯</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="#">关于</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" href="#">联系</a>
                            </li>
                            
                            <span class="scrollspy-indicator"></span>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <section id="intro" class="scrollspy-section bg-light" style="background: url(/assets/website/img/hiddifynextgithub/bg-pattern.png) no-repeat;background-size: cover;">
        <div class="container-lg py-5">
            <div class="row justify-content-center py-5">
                <div class="col-lg-10 text-center">
                    <h1 class="display-2 fw-bold mt-5 pt-5">smdms超市订单管理系统之登录功能</h1>
                    <nav class="breadcrumb justify-content-center">
                        <a class="breadcrumb-item" href="/">首页</a>
                        <a class="breadcrumb-item" href="/news/">新闻资讯</a>
                        <span class="breadcrumb-item active" aria-current="page">正文</span>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <section id="why" class="scrollspy-section py-5 my-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <ul> <li>Supermarket order management system</li> </ul> <ol> <li> <p>创建数据库<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/3a464cfd9d821d6f96e03b5d5673cae7.jpg" alt="smdms超市订单管理系统之登录功能"></p> </li> <li> <p>数据库代码放置如下</p> </li> </ol> <details> <summary>点击查看数据库address代码</summary> <pre><code>CREATE TABLE `smbms_address` (   `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键',   `contact` varchar(15) DEFAULT NULL COMMENT '联系人姓名',   `addressDesc` varchar(50) DEFAULT NULL COMMENT '收货地址',   `postCode` varchar(15) DEFAULT NULL COMMENT '邮编',   `tel` int(20) DEFAULT NULL COMMENT '联系人电话',   `createdBy` varchar(20) DEFAULT NULL COMMENT '创建者',   `creationDate` datetime DEFAULT NULL COMMENT '创建时间',   `modifyBy` bigint(20) DEFAULT NULL COMMENT '修改者',   `modifyDate` datetime DEFAULT NULL COMMENT '修改时间',   `userId` bigint(20) DEFAULT NULL COMMENT '用户ID',   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; INSERT INTO `smbms_address` VALUES (1, '王丽', '北京市东城区东交民巷44号', '100010', '13678789999', 1, '2016-04-13 00:00:00', NULL, NULL, 1); INSERT INTO `smbms_address` VALUES (2, '张红丽', '北京市海淀区丹棱街3号', '100000', '18567672312', 1, '2016-04-13 00:00:00', NULL, NULL, 1); INSERT INTO `smbms_address` VALUES (3, '任志强', '北京市东城区美术馆后街23号', '100021', '13387906742', 1, '2016-04-13 00:00:00', NULL, NULL, 1); INSERT INTO `smbms_address` VALUES (4, '曹颖', '北京市朝阳区朝阳门南大街14号', '100053', '13568902323', 1, '2016-04-13 00:00:00', NULL, NULL, 2); INSERT INTO `smbms_address` VALUES (5, '李慧', '北京市西城区三里河路南三巷3号', '100032', '18032356666', 1, '2016-04-13 00:00:00', NULL, NULL, 3); INSERT INTO `smbms_address` VALUES (6, '王国强', '北京市顺义区高丽营镇金马工业区18号', '100061', '13787882222', 1, '2016-04-13 00:00:00', NULL, NULL, 3);</code></pre> </details> <details> <summary>点击查看数据库bill代码</summary> <pre><code>CREATE TABLE `smbms_bill` (   `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',   `billCode` varchar(30) DEFAULT NULL COMMENT '账单编码',   `productName` varchar(20) DEFAULT NULL COMMENT '商品名称',   `productDesc` varchar(50) DEFAULT NULL COMMENT '商品描述',   `productUnit` varchar(60) DEFAULT NULL COMMENT '商品单位',   `productCount` decimal(20,2) DEFAULT NULL COMMENT '商品数量',   `totalPrice` decimal(20,2) DEFAULT NULL COMMENT '总金额',   `isPayment` int(10) DEFAULT NULL COMMENT '是否支付',   `createdBy` bigint(20) DEFAULT NULL COMMENT '创建者',   `creationDate` datetime DEFAULT NULL COMMENT '创建时间',   `modifyBy` bigint(20) DEFAULT NULL COMMENT '更新者',   `modifyDate` datetime DEFAULT NULL COMMENT '更新时间',   `providerId` int(10) DEFAULT NULL COMMENT '提供者id',   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; INSERT INTO `smbms_bill` VALUES (2, 'BILL2016_002', '香皂、肥皂、药皂', '日用品-皂类', '块', 1000.00, 10000.00, 2, 1, '2016-03-23 04:20:40', NULL, NULL, 13); INSERT INTO `smbms_bill` VALUES (3, 'BILL2016_003', '大豆油', '食品-食用油', '斤', 300.00, 5890.00, 2, 1, '2014-12-14 13:02:03', NULL, NULL, 6); INSERT INTO `smbms_bill` VALUES (4, 'BILL2016_004', '橄榄油', '食品-进口食用油', '斤', 200.00, 9800.00, 2, 1, '2013-10-10 03:12:13', NULL, NULL, 7); INSERT INTO `smbms_bill` VALUES (5, 'BILL2016_005', '洗洁精', '日用品-厨房清洁', '瓶', 500.00, 7000.00, 2, 1, '2014-12-14 13:02:03', NULL, NULL, 9); INSERT INTO `smbms_bill` VALUES (6, 'BILL2016_006', '美国大杏仁', '食品-坚果', '袋', 300.00, 5000.00, 2, 1, '2016-04-14 06:08:09', NULL, NULL, 4); INSERT INTO `smbms_bill` VALUES (7, 'BILL2016_007', '沐浴液、精油', '日用品-沐浴类', '瓶', 500.00, 23000.00, 1, 1, '2016-07-22 10:10:22', NULL, NULL, 14); INSERT INTO `smbms_bill` VALUES (8, 'BILL2016_008', '不锈钢盘碗', '日用品-厨房用具', '个', 600.00, 6000.00, 2, 1, '2016-04-14 05:12:13', NULL, NULL, 14); INSERT INTO `smbms_bill` VALUES (9, 'BILL2016_009', '塑料杯', '日用品-杯子', '个', 350.00, 1750.00, 2, 1, '2016-02-04 11:40:20', NULL, NULL, 14); INSERT INTO `smbms_bill` VALUES (10, 'BILL2016_010', '豆瓣酱', '食品-调料', '瓶', 200.00, 2000.00, 2, 1, '2013-10-29 05:07:03', NULL, NULL, 8); INSERT INTO `smbms_bill` VALUES (11, 'BILL2016_011', '海之蓝', '饮料-国酒', '瓶', 50.00, 10000.00, 1, 1, '2016-04-14 16:16:00', NULL, NULL, 1); INSERT INTO `smbms_bill` VALUES (12, 'BILL2016_012', '芝华士', '饮料-洋酒', '瓶', 20.00, 6000.00, 1, 1, '2016-09-09 17:00:00', NULL, NULL, 1); INSERT INTO `smbms_bill` VALUES (13, 'BILL2016_013', '长城红葡萄酒', '饮料-红酒', '瓶', 60.00, 800.00, 2, 1, '2016-11-14 15:23:00', NULL, NULL, 1); INSERT INTO `smbms_bill` VALUES (14, 'BILL2016_014', '泰国香米', '食品-大米', '斤', 400.00, 5000.00, 2, 1, '2016-10-09 15:20:00', NULL, NULL, 3); INSERT INTO `smbms_bill` VALUES (15, 'BILL2016_015', '东北大米', '食品-大米', '斤', 600.00, 4000.00, 2, 1, '2016-11-14 14:00:00', NULL, NULL, 3); INSERT INTO `smbms_bill` VALUES (16, 'BILL2016_016', '可口可乐', '饮料', '瓶', 2000.00, 6000.00, 2, 1, '2012-03-27 13:03:01', NULL, NULL, 2); INSERT INTO `smbms_bill` VALUES (17, 'BILL2016_017', '脉动', '饮料', '瓶', 1500.00, 4500.00, 2, 1, '2016-05-10 12:00:00', NULL, NULL, 2); INSERT INTO `smbms_bill` VALUES (18, 'BILL2016_018', '哇哈哈', '饮料', '瓶', 2000.00, 4000.00, 2, 1, '2015-11-24 15:12:03', NULL, NULL, 2);</code></pre> </details> <details> <summary>点击查看数据库provider代码</summary> <pre><code>CREATE TABLE `smbms_provider` (   `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',   `proCode` varchar(15) DEFAULT NULL COMMENT '供应商编码',   `proName` varchar(15) DEFAULT NULL COMMENT '供应商名称',   `proDesc` varchar(50) DEFAULT NULL COMMENT '供应商描述',   `proContact` varchar(15) DEFAULT NULL COMMENT '供应商联系人',   `proPhone` varchar(20) DEFAULT NULL COMMENT '供应商电话',   `userAddress` varchar(30) DEFAULT NULL COMMENT '供应商地址',   `userFax` varchar(20) DEFAULT NULL COMMENT '供应商传真',   `createdBy` bigint(20) DEFAULT NULL COMMENT '创建者',   `creationDate` datetime DEFAULT NULL COMMENT '创建时间',   `modifyBy` bigint(20) DEFAULT NULL COMMENT '更新者',   `modifyDate` datetime DEFAULT NULL COMMENT '更新时间',   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; INSERT INTO `smbms_provider` VALUES (1, 'BJ_GYS001', '北京三木堂商贸有限公司', '长期合作伙伴，主营产品:茅台、五粮液、郎酒、酒鬼酒、泸州老窖、赖茅酒、法国红酒等', '张国强', '13566667777', '北京市丰台区育芳园北路', '010-58858787', 1, '2013-03-21 16:52:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (2, 'HB_GYS001', '石家庄帅益食品贸易有限公司', '长期合作伙伴，主营产品:饮料、水饮料、植物蛋白饮料、休闲食品、果汁饮料、功能饮料等', '王军', '13309094212', '河北省石家庄新华区', '0311-67738876', 1, '2016-04-13 04:20:40', NULL, NULL); INSERT INTO `smbms_provider` VALUES (3, 'GZ_GYS001', '深圳市泰香米业有限公司', '初次合作伙伴，主营产品：良记金轮米,龙轮香米等', '郑程瀚', '13402013312', '广东省深圳市福田区深南大道6006华丰大厦', '0755-67776212', 1, '2014-03-21 16:56:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (4, 'GZ_GYS002', '深圳市喜来客商贸有限公司', '长期合作伙伴，主营产品：坚果炒货.果脯蜜饯.天然花茶.营养豆豆.特色美食.进口食品.海味零食.肉脯肉', '林妮', '18599897645', '广东省深圳市福龙工业区B2栋3楼西', '0755-67772341', 1, '2013-03-22 16:52:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (5, 'JS_GYS001', '兴化佳美调味品厂', '长期合作伙伴，主营产品：天然香辛料、鸡精、复合调味料', '徐国洋', '13754444221', '江苏省兴化市林湖工业区', '0523-21299098', 1, '2015-11-22 16:52:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (6, 'BJ_GYS002', '北京纳福尔食用油有限公司', '长期合作伙伴，主营产品：山茶油、大豆油、花生油、橄榄油等', '马莺', '13422235678', '北京市朝阳区珠江帝景1号楼', '010-588634233', 1, '2012-03-21 17:52:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (7, 'BJ_GYS003', '北京国粮食用油有限公司', '初次合作伙伴，主营产品：花生油、大豆油、小磨油等', '王驰', '13344441135', '北京大兴青云店开发区', '010-588134111', 1, '2016-04-13 00:00:00', NULL, NULL); INSERT INTO `smbms_provider` VALUES (8, 'ZJ_GYS001', '慈溪市广和绿色食品厂', '长期合作伙伴，主营产品：豆瓣酱、黄豆酱、甜面酱，辣椒，大蒜等农产品', '薛圣丹', '18099953223', '浙江省宁波市慈溪周巷小安村', '0574-34449090', 1, '2013-11-21 06:02:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (9, 'GX_GYS001', '优百商贸有限公司', '长期合作伙伴，主营产品：日化产品', '李立国', '13323566543', '广西南宁市秀厢大道42-1号', '0771-98861134', 1, '2013-03-21 19:52:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (10, 'JS_GYS002', '南京火头军信息技术有限公司', '长期合作伙伴，主营产品：不锈钢厨具等', '陈女士', '13098992113', '江苏省南京市浦口区浦口大道1号新城总部大厦A座903室', '025-86223345', 1, '2013-03-25 16:52:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (11, 'GZ_GYS003', '广州市白云区美星五金制品厂', '长期合作伙伴，主营产品：海绵床垫、坐垫、靠垫、海绵枕头、头枕等', '梁天', '13562276775', '广州市白云区钟落潭镇福龙路20号', '020-85542231', 1, '2016-12-21 06:12:17', NULL, NULL); INSERT INTO `smbms_provider` VALUES (12, 'BJ_GYS004', '北京隆盛日化科技', '长期合作伙伴，主营产品：日化环保清洗剂，家居洗涤专卖、洗涤用品网、墙体除霉剂、墙面霉菌清除剂等', '孙欣', '13689865678', '北京市大兴区旧宫', '010-35576786', 1, '2014-11-21 12:51:11', NULL, NULL); INSERT INTO `smbms_provider` VALUES (13, 'SD_GYS001', '山东豪克华光联合发展有限公司', '长期合作伙伴，主营产品：洗衣皂、洗衣粉、洗衣液、洗洁精、消杀类、香皂等', '吴洪转', '13245468787', '山东济阳济北工业区仁和街21号', '0531-53362445', 1, '2015-01-28 10:52:07', NULL, NULL); INSERT INTO `smbms_provider` VALUES (14, 'JS_GYS003', '无锡喜源坤商行', '长期合作伙伴，主营产品：日化品批销', '周一清', '18567674532', '江苏无锡盛岸西路', '0510-32274422', 1, '2016-04-23 11:11:11', NULL, NULL); INSERT INTO `smbms_provider` VALUES (15, 'ZJ_GYS002', '乐摆日用品厂', '长期合作伙伴，主营产品：各种中、高档塑料杯，塑料乐扣水杯（密封杯）、保鲜杯（保鲜盒）、广告杯、礼品杯', '王世杰', '13212331567', '浙江省金华市义乌市义东路', '0579-34452321', 1, '2016-08-22 10:01:30', NULL, NULL);</code></pre> </details> <details> <summary>点击查看数据库role代码</summary> <pre><code>CREATE TABLE `smbms_role` (   `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',   `roleCode` varchar(30) DEFAULT NULL COMMENT '角色编码',   `roleName` varchar(15) DEFAULT NULL COMMENT '角色名称',   `createdBy` bigint(20) DEFAULT NULL COMMENT '创建者',   `creationDate` datetime DEFAULT NULL COMMENT '创建时间',   `modifyBy` bigint(20) DEFAULT NULL COMMENT '更新者',   `modifyDate` datetime DEFAULT NULL COMMENT '更新时间',   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; INSERT INTO `smbms_role` VALUES (1, 'SMBMS_ADMIN', '系统管理员', 1, '2016-04-13 00:00:00', NULL, NULL); INSERT INTO `smbms_role` VALUES (2, 'SMBMS_MANAGER', '经理', 1, '2016-04-13 00:00:00', NULL, NULL); INSERT INTO `smbms_role` VALUES (3, 'SMBMS_EMPLOYEE', '普通员工', 1, '2016-04-13 00:00:00', NULL, NULL);</code></pre> </details> <details> <summary>点击查看数据库user代码</summary> <pre><code>CREATE TABLE `smbms_user` (   `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',   `userCode` varchar(15) DEFAULT NULL COMMENT '用户编码',   `userName` varchar(15) DEFAULT NULL COMMENT '用户名字',   `userPassword` varchar(20) DEFAULT NULL COMMENT '用户密码',   `gender` int(10) DEFAULT NULL COMMENT '性别',   `birthday` date DEFAULT NULL COMMENT '出生日期',   `phone` varchar(20) DEFAULT NULL COMMENT '电话',   `address` varchar(30) DEFAULT NULL COMMENT '地址',   `userRole` bigint(20) DEFAULT NULL COMMENT '用户角色',   `createdBy` bigint(20) DEFAULT NULL COMMENT '创建者',   `creationDate` datetime DEFAULT NULL COMMENT '创建时间',   `modifyBy` bigint(20) DEFAULT NULL COMMENT '更新者',   `modifyDate` datetime DEFAULT NULL COMMENT '更新时间',   PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; INSERT INTO `smbms_user` VALUES (1, 'admin', '111', '111111', 1, '2021-04-22', '13688889999', '北京市海淀区成府路207号', 3, 1, '2013-03-21 16:52:07', 1, '2021-04-22 17:43:02'); INSERT INTO `smbms_user` VALUES (2, 'liming', '李明', '0000000', 2, '1983-12-10', '13688884457', '北京市东城区前门东大街9号', 2, 1, '2014-12-31 19:52:09', NULL, NULL); INSERT INTO `smbms_user` VALUES (5, 'hanlubiao', '韩路彪', '0000000', 2, '1984-06-05', '18567542321', '北京市朝阳区北辰中心12号', 2, 1, '2014-12-31 19:52:09', NULL, NULL); INSERT INTO `smbms_user` VALUES (6, 'zhanghua', '张华', '0000000', 1, '1983-06-15', '13544561111', '北京市海淀区学院路61号', 3, 1, '2013-02-11 10:51:17', NULL, NULL); INSERT INTO `smbms_user` VALUES (7, 'wangyang', '王洋', '0000000', 2, '1982-12-31', '13444561124', '北京市海淀区西二旗辉煌国际16层', 3, 1, '2014-06-11 19:09:07', NULL, NULL); INSERT INTO `smbms_user` VALUES (8, 'zhaoyan', '赵燕', '0000000', 2, '2021-04-22', '18098764545', '北京市海淀区回龙观小区10号楼', 2, 1, '2016-04-21 13:54:07', 1, '2021-04-22 17:56:11'); INSERT INTO `smbms_user` VALUES (10, 'sunlei', '孙磊', '0000000', 2, '1981-01-04', '13387676765', '北京市朝阳区管庄新月小区12楼', 3, 1, '2015-05-06 10:52:07', NULL, NULL); INSERT INTO `smbms_user` VALUES (11, 'sunxing', '孙兴', '0000000', 2, '1978-03-12', '13367890900', '北京市朝阳区建国门南大街10号', 3, 1, '2016-11-09 16:51:17', NULL, NULL); INSERT INTO `smbms_user` VALUES (12, 'zhangchen', '张晨', '0000000', 1, '1986-03-28', '18098765434', '朝阳区管庄路口北柏林爱乐三期13号楼', 3, 1, '2016-08-09 05:52:37', 1, '2016-04-14 14:15:36'); INSERT INTO `smbms_user` VALUES (13, 'dengchao', '邓超', '0000000', 2, '1981-11-04', '13689674534', '北京市海淀区北航家属院10号楼', 3, 1, '2016-07-11 08:02:47', NULL, NULL); INSERT INTO `smbms_user` VALUES (15, 'zhaomin', '赵敏', '0000000', 1, '1987-12-04', '18099897657', '北京市昌平区天通苑3区12号楼', 2, 1, '2015-09-12 12:02:12', NULL, NULL);</code></pre> </details> <ol start="3"> <li>当数据库配置完以后我们开始idea，创建一个Maven Webapp模板项目</li> <li>然后开始配置Tomcat服务器</li> <li>在pom.xml中导入项目依赖的jar包</li> </ol> <details> <summary>点击查看代码</summary> <pre><code>&lt;dependencies&gt;     &lt;dependency&gt;       &lt;groupId&gt;junit&lt;/groupId&gt;       &lt;artifactId&gt;junit&lt;/artifactId&gt;       &lt;version&gt;4.11&lt;/version&gt;       &lt;scope&gt;test&lt;/scope&gt;     &lt;/dependency&gt;     &lt;dependency&gt;&lt;!-- servlet包 --&gt;       &lt;groupId&gt;javax.servlet&lt;/groupId&gt;       &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;       &lt;version&gt;2.5&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;&lt;!-- jstl包 --&gt;       &lt;groupId&gt;javax.servlet.jsp.jstl&lt;/groupId&gt;       &lt;artifactId&gt;jstl-api&lt;/artifactId&gt;       &lt;version&gt;1.2&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;&lt;!-- jsp包 --&gt;       &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;       &lt;artifactId&gt;javax.servlet.jsp-api&lt;/artifactId&gt;       &lt;version&gt;2.3.3&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;&lt;!-- 数据库包 --&gt;       &lt;groupId&gt;mysql&lt;/groupId&gt;       &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;       &lt;version&gt;8.0.28&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;       &lt;groupId&gt;taglibs&lt;/groupId&gt;       &lt;artifactId&gt;standard&lt;/artifactId&gt;       &lt;version&gt;1.1.2&lt;/version&gt;     &lt;/dependency&gt;   &lt;/dependencies&gt;</code></pre> </details> </h1> <ol> <li>首先编写我们的实体类pojo，数据库表中的信息与之对应。</li> </ol> <details> <summary>点击User类代码</summary> <pre><code>package pojo;  import java.util.Date;  public class User {     private Integer id; //id     private String userCode; //用户编码     private String userName; //用户名字     private String userPassword; //用户密码     private Integer gender; //性别     private Date birthday; //出生日期     private String phone; //手机号     private String address; //地址     private Integer userRole; //用户角色     private Integer createBy; //创建者     private Date creationDate; //创建时间     private Integer modifyBy; //更新者     private Date modifyDate; //更新时间      private Integer age; //年龄     private String userRoleName; //用户角色名字      public Integer getAge() {         Date date = new Date();         Integer age = date.getYear() - birthday.getYear();         return age;     }      public void setAge(Integer age) {         this.age = age;     }      public String getUserRoleName() {         return userRoleName;     }      public void setUserRoleName(String userRoleName) {         this.userRoleName = userRoleName;     }      public Integer getId() {         return id;     }      public void setId(Integer id) {         this.id = id;     }      public String getUserCode() {         return userCode;     }      public void setUserCode(String userCode) {         this.userCode = userCode;     }      public String getUserName() {         return userName;     }      public void setUserName(String userName) {         this.userName = userName;     }      public String getUserPassword() {         return userPassword;     }      public void setUserPassword(String userPassword) {         this.userPassword = userPassword;     }      public Integer getGender() {         return gender;     }      public void setGender(Integer gender) {         this.gender = gender;     }      public Date getBirthday() {         return birthday;     }      public void setBirthday(Date birthday) {         this.birthday = birthday;     }      public String getPhone() {         return phone;     }      public void setPhone(String phone) {         this.phone = phone;     }      public String getAddress() {         return address;     }      public void setAddress(String address) {         this.address = address;     }      public Integer getUserRole() {         return userRole;     }      public void setUserRole(Integer userRole) {         this.userRole = userRole;     }      public Integer getCreateBy() {         return createBy;     }      public void setCreateBy(Integer createBy) {         this.createBy = createBy;     }      public Date getCreationDate() {         return creationDate;     }      public void setCreationDate(Date creationDate) {         this.creationDate = creationDate;     }      public Integer getModifyBy() {         return modifyBy;     }      public void setModifyBy(Integer modifyBy) {         this.modifyBy = modifyBy;     }      public Date getModifyDate() {         return modifyDate;     }      public void setModifyDate(Date modifyDate) {         this.modifyDate = modifyDate;     } }</code></pre> </details> <details> <summary>点击Role类代码</summary> <pre><code>package pojo;  import java.util.Date;  public class Role {     private Integer id; //id     private String roleCode; //角色编码     private String roleName; //角色名字     private Integer createdBy; //创建者     private Date creationDate; //创建时间     private Integer modifyBy; //更新者     private Date modifyDate; //更新时间      public Integer getId() {         return id;     }      public void setId(Integer id) {         this.id = id;     }      public String getRoleCode() {         return roleCode;     }      public void setRoleCode(String roleCode) {         this.roleCode = roleCode;     }      public String getRoleName() {         return roleName;     }      public void setRoleName(String roleName) {         this.roleName = roleName;     }      public Integer getCreatedBy() {         return createdBy;     }      public void setCreatedBy(Integer createdBy) {         this.createdBy = createdBy;     }      public Date getCreationDate() {         return creationDate;     }      public void setCreationDate(Date creationDate) {         this.creationDate = creationDate;     }      public Integer getModifyBy() {         return modifyBy;     }      public void setModifyBy(Integer modifyBy) {         this.modifyBy = modifyBy;     }      public Date getModifyDate() {         return modifyDate;     }      public void setModifyDate(Date modifyDate) {         this.modifyDate = modifyDate;     } }</code></pre> </details> <details> <summary>点击Provider代码</summary> <pre><code>package pojo;  import java.util.Date;  public class Provider {     private Integer id; //id     private String proCode; //供应商编码     private String proName; //供应商名字     private String proDesc; //供应商查询     private String proContact; //供应商联系人     private String proPhone; //供应商手机     private String proAddress; //供应商地址     private String proFax; //供应商传真     private Integer createdBy; //创建者     private Date creationDate; //创建时间     private Integer modifyBy; //更新者     private Date modifyDate; //更新时间      public Integer getId() {         return id;     }      public void setId(Integer id) {         this.id = id;     }      public String getProCode() {         return proCode;     }      public void setProCode(String proCode) {         this.proCode = proCode;     }      public String getProName() {         return proName;     }      public void setProName(String proName) {         this.proName = proName;     }      public String getProDesc() {         return proDesc;     }      public void setProDesc(String proDesc) {         this.proDesc = proDesc;     }      public String getProContact() {         return proContact;     }      public void setProContact(String proContact) {         this.proContact = proContact;     }      public String getProPhone() {         return proPhone;     }      public void setProPhone(String proPhone) {         this.proPhone = proPhone;     }      public String getProAddress() {         return proAddress;     }      public void setProAddress(String proAddress) {         this.proAddress = proAddress;     }      public String getProFax() {         return proFax;     }      public void setProFax(String proFax) {         this.proFax = proFax;     }      public Integer getCreatedBy() {         return createdBy;     }      public void setCreatedBy(Integer createdBy) {         this.createdBy = createdBy;     }      public Date getCreationDate() {         return creationDate;     }      public void setCreationDate(Date creationDate) {         this.creationDate = creationDate;     }      public Integer getModifyBy() {         return modifyBy;     }      public void setModifyBy(Integer modifyBy) {         this.modifyBy = modifyBy;     }      public Date getModifyDate() {         return modifyDate;     }      public void setModifyDate(Date modifyDate) {         this.modifyDate = modifyDate;     } }</code></pre> </details> <details> <summary>点击Bill代码</summary> <pre><code>package pojo;  import java.math.BigDecimal; import java.util.Date;  public class Bill {     private int id; //id     private String billCode; //账单编码     private String productName; //商品名称     private String productDesc; //商品描述     private String productUnit; //商品单位     private BigDecimal productCount; //商品数量     private BigDecimal totalPrice; //总金额     private Integer isPayment; //是否支付     private Integer createdBy; //创建者     private Date creationDate; //创建时间     private Integer modifyBy; //更新者     private Date modifyDate; //更新时间     private Integer providerId; //供应商id      private String providerName;//供应商名字      public int getId() {         return id;     }      public void setId(int id) {         this.id = id;     }      public String getBillCode() {         return billCode;     }      public void setBillCode(String billCode) {         this.billCode = billCode;     }      public String getProductName() {         return productName;     }      public void setProductName(String productName) {         this.productName = productName;     }      public String getProductDesc() {         return productDesc;     }      public void setProductDesc(String productDesc) {         this.productDesc = productDesc;     }      public String getProductUnit() {         return productUnit;     }      public void setProductUnit(String productUnit) {         this.productUnit = productUnit;     }      public BigDecimal getProductCount() {         return productCount;     }      public void setProductCount(BigDecimal productCount) {         this.productCount = productCount;     }      public BigDecimal getTotalPrice() {         return totalPrice;     }      public void setTotalPrice(BigDecimal totalPrice) {         this.totalPrice = totalPrice;     }      public Integer getIsPayment() {         return isPayment;     }      public void setIsPayment(Integer isPayment) {         this.isPayment = isPayment;     }      public Integer getCreatedBy() {         return createdBy;     }      public void setCreatedBy(Integer createdBy) {         this.createdBy = createdBy;     }      public Date getCreationDate() {         return creationDate;     }      public void setCreationDate(Date creationDate) {         this.creationDate = creationDate;     }      public Integer getModifyBy() {         return modifyBy;     }      public void setModifyBy(Integer modifyBy) {         this.modifyBy = modifyBy;     }      public Date getModifyDate() {         return modifyDate;     }      public void setModifyDate(Date modifyDate) {         this.modifyDate = modifyDate;     }      public Integer getProviderId() {         return providerId;     }      public void setProviderId(Integer providerId) {         this.providerId = providerId;     }      public String getProviderName() {         return providerName;     }      public void setProviderName(String providerName) {         this.providerName = providerName;     } }</code></pre> </details> <ol start="2"> <li>然后编写数据库连接用的文件</li> </ol> <details> <summary>点击文件后缀为.properties</summary> <pre><code>driver=com.mysql.cj.jdbc.Driver url=jdbc:mysql://localhost:3306/数据库名字?useUnicode=true&amp;characterEncoding=utf8 username=账号 password=密码</code></pre> </details> <ol start="3"> <li> <p>idea连接数据库（不在此展示，自行解决）</p> </li> <li> <p>编写过滤器，使我们网页每次都用utf-8编码</p> </li> </ol> <details> <summary>点击过滤器代码</summary> <pre><code>import javax.servlet.*; import java.io.IOException;  public class Filter implements javax.servlet.Filter {     public void init(FilterConfig filterConfig) throws ServletException {      }      public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {         request.setCharacterEncoding("utf-8");         response.setCharacterEncoding("utf-8");         chain.doFilter(request,response);     }      public void destroy() {      } }</code></pre> </details> <ol start="5"> <li>编写数据库的公共类，实现增删改查SRUD功能</li> </ol> <pre><code>package com.meteor.dao;  import java.io.IOException; import java.io.InputStream; import java.sql.*; import java.util.Properties;  //操作数据库的公共类 public class BaseDao {     private static final String driver;     private static final String url;     private static final String username;     private static final String password;      //静态代码块，随着类的加载而加载     static{         Properties properties = new Properties();//可以让文件内容以键值对的形式读取         //将文件内容读出         InputStream is = BaseDao.class.getClassLoader().getResourceAsStream("db.properties");         try {             //properties.load()从输入字节流读取属性列表（键和元素对）。             properties.load(is);         } catch (IOException e) {             e.printStackTrace();         }         driver = properties.getProperty("driver");         url = properties.getProperty("url");         username = properties.getProperty("username");         password = properties.getProperty("password");     }      //获取数据库的连接     public static Connection getConnection() {         Connection connection = null;         try {             Class.forName(driver);//加载驱动             //尝试建立与给定数据库URL的连接。             connection = DriverManager.getConnection(url, username, password);         } catch (Exception e) {             e.printStackTrace();         }         return connection;     }      //编写查询公共方法     public static ResultSet execute(Connection connection,String sql,Object[] params,ResultSet resultSet,PreparedStatement preparedStatement) throws SQLException {         //connection.prepareStatement(sql)创建一个 PreparedStatement对象，用于将参数化的SQL语句发送到数据库。         preparedStatement = connection.prepareStatement(sql);         for (int i = 0; i &lt; params.length; i++) {             preparedStatement.setObject(i+1,params[i]);//使用给定对象设置指定参数的值。         }         resultSet = preparedStatement.executeQuery();//返回查询结果         return resultSet;     }      //编写增删改公共方法     public static int execute(Connection connection,String sql,Object[] params,PreparedStatement preparedStatement) throws SQLException {         //connection.prepareStatement(sql)创建一个 PreparedStatement对象，用于将参数化的SQL语句发送到数据库。         preparedStatement = connection.prepareStatement(sql);         for (int i = 0; i &lt; params.length; i++) {             preparedStatement.setObject(i+1,params[i]);         }         int updateRows = preparedStatement.executeUpdate();         return updateRows;     }      //释放资源     public static boolean closeResource(Connection connection,PreparedStatement preparedStatement,ResultSet resultSet) {         boolean flag = true;         if(resultSet != null) {             try {                 resultSet.close();                 //GC回收机制，如果对象为null，就会被回收。                 resultSet = null;             } catch (SQLException e) {                 e.printStackTrace();                 flag = false;             }         }          if(preparedStatement != null) {             try {                 preparedStatement.close();                 //GC回收机制，如果对象为null，就会被回收。                 preparedStatement = null;             } catch (SQLException e) {                 e.printStackTrace();                 flag = false;             }         }          if(connection != null) {             try {                 connection.close();                 //GC回收机制，如果对象为null，就会被回收。                 connection = null;             } catch (SQLException e) {                 e.printStackTrace();                 flag = false;             }         }         return flag;     } }</code></pre> <ol start="6"> <li>编写service服务层代码，验证登录是否正确</li> </ol> <pre><code>import dao.BaseDao; import dao.user.UserDao; import dao.user.UserDaoImpl; import pojo.User;  import java.sql.Connection;  public class UserServiceImpl implements UserService{     public User login(String userCode, String password) {         UserDaoImpl userDao = new UserDaoImpl();         Connection connection = BaseDao.getConnection();//连接数据库         User user = userDao.getLoginUser(connection, userCode);//获得登录用户信息         //对登录的用户账号密码进行判断         if(user.getUserPassword() == null ? password == null : user.getUserPassword().equals(password)) {             BaseDao.closeResource(connection,null,null);             return user;         }else {             BaseDao.closeResource(connection,null,null);             System.out.println("密码错误");             return null;         }     } }</code></pre> <p>7.编写servlet业务层代码，和前端交互</p> <pre><code>package com.meteor.servlet.user;  import com.meteor.pojo.User; import com.meteor.service.user.UserService; import com.meteor.service.user.UserServiceImpl; import com.meteor.util.Constants;  import javax.servlet.ServletException; import javax.servlet.http.HttpServlet; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import java.io.IOException;  public class LoginServlet extends HttpServlet {      //控制层调用业务层代码     @Override     protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {         System.out.println("别出bug");         //获取前端输入的用户名和密码         String userCode = req.getParameter("userCode");         String userPassword = req.getParameter("userPassword");         //和数据库的用户密码对比，调用业务层         UserServiceImpl userService = new UserServiceImpl();         User user = userService.login(userCode, userPassword);          if(user != null) { //查有此人             //将用户信息放到session中             req.getSession().setAttribute(Constants.USER_SESSION,user);             //登录成功，跳转到内部主页             resp.sendRedirect("jsp/frame.jsp");         }else {             //查无此人，转回登录页面             req.setAttribute("error","用户密码不正确");             req.getRequestDispatcher("login.jsp").forward(req,resp);         }     }      @Override     protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {         doGet(req, resp);     } }</code></pre> <ol start="8"> <li>工具类用来存放session值</li> </ol> <details> <summary>点击查看代码</summary> <pre><code> public class Constants {     public static final String USER_SESSION = "userSession"; }</code></pre> </details> <ol start="9"> <li>在web.xml设置servlet和filter过滤器</li> </ol> <pre><code> &lt;!-- 字符编码过滤器 --&gt;     &lt;filter&gt;         &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;         &lt;filter-class&gt;com.meteor.filter.CharacterEncodingFilter&lt;/filter-class&gt;     &lt;/filter&gt;     &lt;filter-mapping&gt;         &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;         &lt;url-pattern&gt;/*&lt;/url-pattern&gt;     &lt;/filter-mapping&gt;      &lt;!-- 设置欢迎页面 --&gt;     &lt;welcome-file-list&gt;         &lt;welcome-file&gt;login.jsp&lt;/welcome-file&gt;     &lt;/welcome-file-list&gt;      &lt;servlet&gt;         &lt;servlet-name&gt;LoginServlet&lt;/servlet-name&gt;         &lt;servlet-class&gt;com.meteor.servlet.user.LoginServlet&lt;/servlet-class&gt;     &lt;/servlet&gt;     &lt;servlet-mapping&gt;         &lt;servlet-name&gt;LoginServlet&lt;/servlet-name&gt;         &lt;url-pattern&gt;/login.do&lt;/url-pattern&gt;     &lt;/servlet-mapping&gt;</code></pre> </h1> <ul> <li>前端代码页面都是cpoy的，若想获取前端代码可私信我。</li> <li>对于smdms登录内容就总结这么多，也是跟着狂神学的，代码也没怎么改进，只是想自己复习理解一遍。如果有不足之处，希望大家多多包涵，多多支持。如果有不懂的地方可以直接私信问我，欢迎来访！</li> <li>我将会继续更新关于Java的学习知识，以及此项目的后续功能，感兴趣的小伙伴可以关注一下。</li> <li>文章写得比较走心，用了很长时间，绝对不是copy过来的！</li> <li>尊重每一位学习知识的人，同时也尊重每一位分享知识的人。</li> </ul> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-45031.htm">Istio实践流量控制及服务间调用</a></p>
                                        <p>下一个：<a href="/news/article-45515.htm">vue如何根据条件判断按钮是否可以点击_vue.js</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-23882.htm" title="广州宠物领养中心有哪些公司在招聘（广州宠物领养网）">广州宠物领养中心有哪些公司在招聘（广州宠物领养网）</a></li>
                        <li class="py-2"><a href="/news/article-22042.htm" title="动物疫苗种类及类型分类图片大全（动物疫苗的类型）">动物疫苗种类及类型分类图片大全（动物疫苗的类型）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-22-latest-hiddify-next-node.htm" title="「11月22日」最高速度21.1M/S，2024年HiddifyNext每天更新免费节点订阅链接">「11月22日」最高速度21.1M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-25737.htm" title="canvas生成带有二维码的海报">canvas生成带有二维码的海报</a></li>
                        <li class="py-2"><a href="/news/article-22956.htm" title="宠物店卖逗猫棒吗知乎（宠物店买宠物玩具吗）">宠物店卖逗猫棒吗知乎（宠物店买宠物玩具吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-node-share.htm" title="「11月12日」最高速度21.1M/S，2024年HiddifyNext每天更新免费节点订阅链接">「11月12日」最高速度21.1M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-35057.htm" title="【定义+用法+区别+使用场景】escape(),encodeURI(),encodeURIComponent()">【定义+用法+区别+使用场景】escape(),encodeURI(),encodeURIComponent()</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-28-free-node-subscribe-links.htm" title="「12月28日」最高速度20.2M/S，2024年HiddifyNext每天更新免费节点订阅链接">「12月28日」最高速度20.2M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-27-latest-hiddify-next-node.htm" title="「11月27日」最高速度21.5M/S，2024年HiddifyNext每天更新免费节点订阅链接">「11月27日」最高速度21.5M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-42537.htm" title="关于Windows系列密码抓取">关于Windows系列密码抓取</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">78</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <div class="footer-bottom py-3 text-center">
        <div class="container-lg">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <p class="m-0">
                HiddifyNextGithub免费节点官网 版权所有 Powered by WordPress
            </p>
        </div>
    </div>
    <script src="/assets/website/js/frontend/hiddifynextgithub/jquery-1.11.0.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.2/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/10.3.1/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextgithub/plugins.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextgithub/script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>