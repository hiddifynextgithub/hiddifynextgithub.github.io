<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifynextgithub.github.io/news/article-20669.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <title>SpringCloud——安全认证（Security）</title>
        <meta name="description" content="一、SpringCloud Security简介 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Spring Cloud Security提供了一组原语，用于构建安全的应用程序" />
        <link rel="icon" href="__ADDON__/img/hiddifynextgithub/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/10.3.1/swiper-bundle.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/hiddifynextgithub/vendor.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/hiddifynextgithub/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LL7EDWRR8Q"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LL7EDWRR8Q');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol xmlns="http://www.w3.org/2000/svg" id="navbar-icon" viewBox="0 0 16 16">
            <path d="M14 10.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 .5-.5zm0-3a.5.5 0 0 0-.5-.5h-7a.5.5 0 0 0 0 1h7a.5.5 0 0 0 .5-.5zm0-3a.5.5 0 0 0-.5-.5h-11a.5.5 0 0 0 0 1h11a.5.5 0 0 0 .5-.5z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="facebook" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12c0 4.84 3.44 8.87 8 9.8V15H8v-3h2V9.5C10 7.57 11.57 6 13.5 6H16v3h-2c-.55 0-1 .45-1 1v2h3v3h-3v6.95c5.05-.5 9-4.76 9-9.95z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="youtube" viewBox="0 0 32 32">
            <path fill="currentColor" d="M29.41 9.26a3.5 3.5 0 0 0-2.47-2.47C24.76 6.2 16 6.2 16 6.2s-8.76 0-10.94.59a3.5 3.5 0 0 0-2.47 2.47A36.13 36.13 0 0 0 2 16a36.13 36.13 0 0 0 .59 6.74a3.5 3.5 0 0 0 2.47 2.47c2.18.59 10.94.59 10.94.59s8.76 0 10.94-.59a3.5 3.5 0 0 0 2.47-2.47A36.13 36.13 0 0 0 30 16a36.13 36.13 0 0 0-.59-6.74ZM13.2 20.2v-8.4l7.27 4.2Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="instagram" viewBox="0 0 256 256">
            <path fill="currentColor" d="M128 80a48 48 0 1 0 48 48a48.05 48.05 0 0 0-48-48Zm0 80a32 32 0 1 1 32-32a32 32 0 0 1-32 32Zm48-136H80a56.06 56.06 0 0 0-56 56v96a56.06 56.06 0 0 0 56 56h96a56.06 56.06 0 0 0 56-56V80a56.06 56.06 0 0 0-56-56Zm40 152a40 40 0 0 1-40 40H80a40 40 0 0 1-40-40V80a40 40 0 0 1 40-40h96a40 40 0 0 1 40 40ZM192 76a12 12 0 1 1-12-12a12 12 0 0 1 12 12Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="twitter" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22.46 6c-.77.35-1.6.58-2.46.69c.88-.53 1.56-1.37 1.88-2.38c-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29c0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15c0 1.49.75 2.81 1.91 3.56c-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07a4.28 4.28 0 0 0 4 2.98a8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21C16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56c.84-.6 1.56-1.36 2.14-2.23Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="linkedin" viewBox="0 0 512 512">
            <path fill="currentColor" d="M444.17 32H70.28C49.85 32 32 46.7 32 66.89v374.72C32 461.91 49.85 480 70.28 480h373.78c20.54 0 35.94-18.21 35.94-38.39V66.89C480.12 46.7 464.6 32 444.17 32Zm-273.3 373.43h-64.18V205.88h64.18ZM141 175.54h-.46c-20.54 0-33.84-15.29-33.84-34.43c0-19.49 13.65-34.42 34.65-34.42s33.85 14.82 34.31 34.42c-.01 19.14-13.31 34.43-34.66 34.43Zm264.43 229.89h-64.18V296.32c0-26.14-9.34-44-32.56-44c-17.74 0-28.24 12-32.91 23.69c-1.75 4.2-2.22 9.92-2.22 15.76v113.66h-64.18V205.88h64.18v27.77c9.34-13.3 23.93-32.44 57.88-32.44c42.13 0 74 27.77 74 87.64Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="arrow-down" viewBox="0 0 32 32">
            <path fill="currentColor" d="M24.59 16.59L17 24.17V4h-2v20.17l-7.59-7.58L6 18l10 10l10-10l-1.41-1.41z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="cart" viewBox="0 0 512 512">
            <path fill="currentColor" d="M160 96.039v32h304v63.345l-35.5 112.655H149.932L109.932 16H16v32h66.068l40 288.039h329.9L496 196.306V96.039H160zm16.984 272.305a64.073 64.073 0 0 0-64 64a64 64 0 0 0 128 0a64.072 64.072 0 0 0-64-64Zm0 96a32 32 0 1 1 32-32a32.038 32.038 0 0 1-32 32Zm224-96a64.073 64.073 0 0 0-64 64a64 64 0 0 0 128 0a64.072 64.072 0 0 0-64-64Zm0 96a32 32 0 1 1 32-32a32.038 32.038 0 0 1-32 32Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="balloon" viewBox="0 0 24 24">
            <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                <path d="M8 16.607c1.15.86 2.518 1.38 4 1.393c4.142.034 7.594-3.92 7.56-8.196C19.527 5.53 16.142 2.034 12 2c-4.142-.034-7.473 3.404-7.44 7.68A8.88 8.88 0 0 0 5.244 13" />
                <path d="M15.5 9a3.035 3.035 0 0 0-3-3M12 20.35c.321 0 .482 0 .593-.022c.654-.128 1.051-.772.858-1.39c-.033-.105-.109-.242-.261-.515M12 20.35c-.321 0-.482 0-.593-.022c-.654-.128-1.051-.772-.858-1.39c.033-.105.109-.242.261-.515M12 20.35v2.15" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="bag-heart" viewBox="0 0 24 24">
            <g fill="none">
                <path fill="currentColor" d="m12 12.191l-.519.542a.75.75 0 0 0 1.038 0L12 12.191Zm-.957 3.675l-.444.604l.444-.604Zm1.914 0l-.444-.605l.444.605Zm-.957.462v.75v-.75Zm-.514-1.067c-.417-.307-.878-.69-1.227-1.093c-.368-.426-.509-.757-.509-.971h-1.5c0 .77.441 1.45.875 1.952c.453.525 1.014.984 1.474 1.321l.887-1.21ZM9.75 13.197c0-.576.263-.827.492-.907c.25-.088.714-.06 1.24.443l1.037-1.083c-.825-.79-1.861-1.096-2.773-.776c-.934.327-1.496 1.226-1.496 2.323h1.5Zm3.65 3.273c.46-.337 1.022-.796 1.475-1.32c.434-.502.875-1.183.875-1.953h-1.5c0 .214-.141.545-.51.971c-.348.403-.809.786-1.226 1.093l.887 1.21Zm2.35-3.273c0-1.097-.563-1.996-1.496-2.323c-.912-.32-1.948-.014-2.773.776l1.038 1.083c.525-.503.989-.531 1.24-.443c.228.08.491.33.491.907h1.5ZM10.6 16.47c.368.27.782.608 1.4.608v-1.5c-.024 0-.04 0-.094-.03a4 4 0 0 1-.42-.287l-.887 1.21Zm1.914-1.21a4 4 0 0 1-.42.289c-.054.029-.07.029-.094.029v1.5c.618 0 1.032-.337 1.4-.608l-.886-1.21Z" />
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M9 6V5a3 3 0 1 1 6 0v1m5.224 6.526c-.586-3.121-.878-4.682-1.99-5.604C17.125 6 15.537 6 12.36 6h-.72c-3.176 0-4.764 0-5.875.922c-1.11.922-1.403 2.483-1.989 5.604c-.823 4.389-1.234 6.583-.034 8.029C4.942 22 7.174 22 11.639 22h.722c4.465 0 6.698 0 7.897-1.445c.696-.84.85-1.93.696-3.555" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="handiplast" viewBox="0 0 24 24">
            <g fill="none">
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M13.5 7.642L9.071 3.213a4.142 4.142 0 0 0-5.858 5.858L14.93 20.787a4.142 4.142 0 0 0 5.858-5.858l-4.358-4.358" />
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="m12 17.858l-2.929 2.929A4.142 4.142 0 0 1 2.596 20m3.546-8l-2.929 2.929c-.322.322-.58.685-.774 1.071M12 6.142l2.929-2.929a4.142 4.142 0 1 1 5.858 5.858L17.857 12" />
                <path fill="currentColor" d="M15.841 12.871a.788.788 0 1 1-1.114 1.114a.788.788 0 0 1 1.114-1.114Zm-3.712-3.712a.787.787 0 1 0-1.114 1.114a.787.787 0 0 0 1.114-1.114Zm4.641 6.497a.787.787 0 1 1-1.114 1.114a.787.787 0 0 1 1.114-1.114ZM9.345 8.23A.788.788 0 1 0 8.23 9.346A.788.788 0 0 0 9.345 8.23Zm3.712 3.713a.787.787 0 1 1-1.113 1.114a.787.787 0 0 1 1.113-1.114Zm.928 2.785a.788.788 0 1 1-1.114 1.113a.788.788 0 0 1 1.114-1.113Zm-3.712-3.713a.787.787 0 1 0-1.114 1.114a.787.787 0 0 0 1.114-1.114Z" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="star-fill" viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="star-empty" viewBox="0 0 16 16">
            <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="play" viewBox="0 0 32 32">
            <path fill="currentColor" d="M7 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.482-.876l20 11a1 1 0 0 1 0 1.752l-20 11A1 1 0 0 1 7 28ZM8 6.69v18.62L24.925 16Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="call-chat" viewBox="0 0 24 24">
            <path fill="currentColor" fill-rule="evenodd" d="M17 2.75a4.25 4.25 0 0 0-3.807 6.142c.16.32.225.71.12 1.102l-.253.946l.946-.253a1.567 1.567 0 0 1 1.102.12A4.25 4.25 0 1 0 17 2.75ZM11.25 7a5.75 5.75 0 1 1 3.19 5.15a.126.126 0 0 0-.04-.013h-.007l-1.112.297a1.4 1.4 0 0 1-1.715-1.714l.298-1.113V9.6a.126.126 0 0 0-.014-.04a5.73 5.73 0 0 1-.6-2.56ZM3.718 4.092c1.226-1.29 3.254-1.049 4.268.385l1.26 1.783c.811 1.147.743 2.74-.225 3.76l-.245.257c0 .002 0 .004-.002.006c-.013.037-.045.152-.013.372c.067.456.418 1.381 1.846 2.884c1.432 1.508 2.3 1.864 2.703 1.929a.608.608 0 0 0 .294-.007l.408-.43c.874-.92 2.236-1.101 3.335-.469l1.91 1.1c1.633.94 2.013 3.239.708 4.613l-1.42 1.495c-.443.467-1.048.866-1.795.94c-1.824.18-6.049-.055-10.478-4.718c-4.134-4.352-4.919-8.137-5.018-9.986c-.049-.914.358-1.697.894-2.261l.544.516l-.544-.516l1.57-1.653Zm3.043 1.25c-.512-.724-1.433-.767-1.956-.217l-1.57 1.653c-.33.349-.505.748-.483 1.148c.08 1.51.731 4.952 4.607 9.033c4.064 4.279 7.809 4.4 9.244 4.258c.283-.028.575-.186.854-.48l1.42-1.495c.614-.645.453-1.808-.368-2.28l-1.91-1.1c-.513-.295-1.114-.204-1.499.202l-.455.48l-.544-.517c.543.517.543.517.542.518l-.001.002l-.003.003l-.007.006l-.014.014a1.003 1.003 0 0 1-.136.112c-.08.057-.186.12-.321.172c-.276.11-.64.168-1.091.095c-.878-.143-2.028-.773-3.55-2.377c-1.528-1.608-2.113-2.807-2.243-3.7c-.067-.454-.014-.817.084-1.092a1.592 1.592 0 0 1 .23-.427l.03-.037l.014-.015l.006-.006l.003-.003l.002-.002s.001-.001.545.515l-.544-.516l.287-.302c.445-.47.51-1.264.088-1.86L6.76 5.342Z" clip-rule="evenodd" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="mail" viewBox="0 0 21 21">
            <g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3.5 6.5v8a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2h-10a2 2 0 0 0-2 2z" />
                <path d="m5.5 7.5l5 3l5-3" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="location" viewBox="0 0 24 24">
            <path fill="currentColor" fill-rule="evenodd" d="M5.25 7.7c0-3.598 3.059-6.45 6.75-6.45c3.608 0 6.612 2.725 6.745 6.208l.478.16c.463.153.87.289 1.191.439c.348.162.667.37.911.709c.244.338.341.707.385 1.088c.04.353.04.78.04 1.269v5.748c0 .61 0 1.13-.047 1.547c-.05.438-.161.87-.463 1.237a2.25 2.25 0 0 1-.62.525c-.412.237-.855.276-1.296.253c-.42-.022-.933-.107-1.534-.208l-.041-.007c-1.293-.215-1.814-.296-2.322-.254a4.3 4.3 0 0 0-.552.083c-.498.109-.976.342-2.159.933l-.122.061c-1.383.692-2.234 1.118-3.154 1.251c-.276.04-.555.06-.835.06c-.928-.002-1.825-.301-3.28-.786a73.75 73.75 0 0 1-.127-.043l-.384-.128l-.037-.012c-.463-.154-.87-.29-1.191-.44c-.348-.162-.667-.37-.911-.709c-.244-.338-.341-.707-.385-1.088c-.04-.353-.04-.78-.04-1.269v-5.02c0-.786 0-1.448.067-1.967c.07-.542.23-1.072.666-1.47a2.25 2.25 0 0 1 .42-.304c.517-.287 1.07-.27 1.605-.166c.11.021.223.047.342.078c-.066-.446-.1-.89-.1-1.328Zm.499 3.01a9.414 9.414 0 0 0-1.028-.288c-.395-.077-.525-.03-.586.004a.747.747 0 0 0-.14.101c-.053.048-.138.156-.19.556c-.053.41-.055.974-.055 1.825v4.93c0 .539.001.88.03 1.138c.028.238.072.327.112.381c.039.055.109.125.326.226c.236.11.56.219 1.07.39l.384.127c1.624.541 2.279.75 2.936.752c.207 0 .413-.015.617-.044c.65-.094 1.276-.397 2.82-1.17l.093-.046c1.06-.53 1.714-.857 2.417-1.01c.246-.054.496-.092.747-.113c.717-.06 1.432.06 2.593.253l.1.017c.655.109 1.083.18 1.407.196c.312.016.419-.025.471-.055a.749.749 0 0 0 .207-.175c.039-.047.097-.146.132-.456c.037-.323.038-.757.038-1.42v-5.667c0-.539-.001-.88-.03-1.138c-.028-.238-.072-.327-.112-.381c-.039-.055-.109-.125-.326-.226c-.236-.11-.56-.219-1.07-.39l-.06-.019a10.701 10.701 0 0 1-1.335 3.788c-.912 1.568-2.247 2.934-3.92 3.663a3.505 3.505 0 0 1-2.794 0c-1.673-.73-3.008-2.095-3.92-3.663a10.856 10.856 0 0 1-.934-2.087ZM12 2.75c-2.936 0-5.25 2.252-5.25 4.95c0 1.418.437 2.98 1.23 4.341c.791 1.362 1.908 2.47 3.223 3.044c.505.22 1.089.22 1.594 0c1.316-.574 2.432-1.682 3.224-3.044c.792-1.36 1.229-2.923 1.229-4.34c0-2.699-2.314-4.951-5.25-4.951Zm0 4a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5ZM9.25 8a2.75 2.75 0 1 1 5.5 0a2.75 2.75 0 0 1-5.5 0Z" clip-rule="evenodd" />
        </symbol>
    </svg>
    <header id="header" class="site-header position-fixed z-2 w-100 border-bottom mb-5">
        <nav id="header-nav" class="navbar navbar-expand-lg py-3">
            <div class="container-lg">
                                <a class="navbar-brand pb-4" href="/">
                    <span>Hiddify Next Github</span>
                </a>
                                <button class="navbar-toggler d-flex d-lg-none order-3 p-2 border-0 shadow-none bg-white" type="button" data-bs-toggle="offcanvas" data-bs-target="#bdNavbar" aria-controls="bdNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <svg class="navbar-icon" width="50" height="50">
                        <use xlink:href="#navbar-icon"></use>
                    </svg>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="bdNavbar" aria-labelledby="bdNavbarOffcanvasLabel">
                    <div class="offcanvas-header px-4 pb-0">
                        <button type="button" class="btn-close btn-close-black" data-bs-dismiss="offcanvas" aria-label="Close" data-bs-target="#bdNavbar"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav scrollspy-nav justify-content-end flex-grow-1 gap-lg-5 pe-3">
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/news/">新闻资讯</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="#">关于</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" href="#">联系</a>
                            </li>
                            
                            <span class="scrollspy-indicator"></span>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <section id="intro" class="scrollspy-section bg-light" style="background: url(__ADDON__/img/hiddifynextgithub/bg-pattern.png) no-repeat;background-size: cover;">
        <div class="container-lg py-5">
            <div class="row justify-content-center py-5">
                <div class="col-lg-10 text-center">
                    <h1 class="display-2 fw-bold mt-5 pt-5">SpringCloud——安全认证（Security）</h1>
                    <nav class="breadcrumb justify-content-center">
                        <a class="breadcrumb-item" href="/">首页</a>
                        <a class="breadcrumb-item" href="/news/">新闻资讯</a>
                        <span class="breadcrumb-item active" aria-current="page">正文</span>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <section id="why" class="scrollspy-section py-5 my-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                      				  				  				<div id="content_views" class="htmledit_views"> <h3>一、SpringCloud Security简介</h3> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Spring Cloud Security提供了一组原语，用于构建安全的应用程序和服务，而且操作简便。可以在外部（或集中）进行大量配置的声明性模型有助于实现大型协作的远程组件系统，通常具有中央身份管理服务。它也非常易于在Cloud Foundry等服务平台中使用。在Spring Boot和Spring Security OAuth2的基础上，可以快速创建实现常见模式的系统，如单点登录，令牌中继和令牌交换。</p> <p id="features"><strong>功能：</strong></p> <ul> <li>从Zuul代理中的前端到后端服务中继SSO令牌</li> <li>资源服务器之间的中继令牌</li> <li>使Feign客户端表现得像<code>OAuth2RestTemplate</code>（获取令牌等）的拦截器</li> <li>在Zuul代理中配置下游身份验证</li> </ul> <h3>二、单一登录实现</h3> <p>1、在<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/typ1805/article/details/82621881"  rel="nofollow">&nbsp;SpringCloud——服务的注册与发现Eureka</a>的基础上做修改</p> <p>添加spring-security支持：</p> <pre class="has"><code>&lt;dependency&gt; 	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 	&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt; &lt;/dependency&gt;</code></pre> <p>添加配置：</p> <pre class="has"><code>server:   port: 8082  spring:   application:     name: eureka-client  eureka:   client:     serviceUrl:       defaultZone: http://localhost:8081/eureka/ #    fetch-registry: false #    register-with-eureka: false  # 安全认证的配置 security:   basic:     enabled: true</code></pre> <p>2、启动工程，浏览器访问：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8082"  rel="nofollow">http://localhost:8082</a>/test</p> <p><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads/20230113/a75fa0cb5d13b63563227d7b6d4ecedb.jpg"></p> <p>输入用户名和密码认证，用户名为user，密码在程序启动时会输出到控制台上，如图：</p> <p><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads/20230113/ac76005d959b73aa1adfd5620a7450c6.jpg"></p> <p>登录成功后浏览器显示：</p> <pre class="has"><code>test=============8082</code></pre> <h3>三、配置MySQL数据库实现认证</h3> <p>1、添加相关依赖：</p> <pre class="has"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt; 	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;  	&lt;groupId&gt;com.example.demo.security&lt;/groupId&gt; 	&lt;artifactId&gt;security-oauth2&lt;/artifactId&gt; 	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; 	&lt;packaging&gt;jar&lt;/packaging&gt;  	&lt;name&gt;security-oauth2&lt;/name&gt;  	&lt;parent&gt; 		&lt;groupId&gt;com.example.demo&lt;/groupId&gt; 		&lt;artifactId&gt;springcloud-security&lt;/artifactId&gt; 		&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; 	&lt;/parent&gt;  	&lt;properties&gt; 		&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; 		&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; 		&lt;java.version&gt;1.8&lt;/java.version&gt; 	&lt;/properties&gt;  	&lt;dependencies&gt; 		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 			&lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt; 		&lt;/dependency&gt;  		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt; 			&lt;scope&gt;test&lt;/scope&gt; 		&lt;/dependency&gt;  		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; 			&lt;artifactId&gt;spring-cloud-starter-security&lt;/artifactId&gt; 		&lt;/dependency&gt;  		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; 			&lt;artifactId&gt;spring-cloud-starter-oauth2&lt;/artifactId&gt; 		&lt;/dependency&gt;  		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 			&lt;artifactId&gt;spring-boot-starter-velocity&lt;/artifactId&gt; 			&lt;version&gt;1.1.3.RELEASE&lt;/version&gt; 		&lt;/dependency&gt;  		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 			&lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt; 		&lt;/dependency&gt;  		&lt;dependency&gt; 			&lt;groupId&gt;mysql&lt;/groupId&gt; 			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; 		&lt;/dependency&gt;  	&lt;/dependencies&gt;  	&lt;build&gt; 		&lt;plugins&gt; 			&lt;plugin&gt; 				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; 			&lt;/plugin&gt; 		&lt;/plugins&gt; 	&lt;/build&gt;   &lt;/project&gt; </code></pre> <p>2、添加配置文件：</p> <pre class="has"><code>server:   port: 8081  spring:   application:     name: security-oauth2   datasource:     url: jdbc:mysql://127.0.0.1:3306/alan_oauth?allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=true&amp;autoReconnect=true     username: root     password: admin     driver-class-name: com.mysql.jdbc.Driver  security:   basic:     enabled: false </code></pre> <p>3、相关config配置文件</p> <pre><code class="language-html">创建授权配置信息类OAuthSecurityConfig.java，声明TokenStore实现和ClientDetails的实现。</code></pre> <pre class="has"><code>package com.example.demo.security.config;  import org.springframework.beans.factory.annotation.Autowired; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.security.authentication.AuthenticationManager; import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer; import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter; import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer; import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer; import org.springframework.security.oauth2.provider.ClientDetailsService; import org.springframework.security.oauth2.provider.client.JdbcClientDetailsService; import org.springframework.security.oauth2.provider.token.DefaultTokenServices; import org.springframework.security.oauth2.provider.token.TokenStore; import org.springframework.security.oauth2.provider.token.store.JdbcTokenStore;  import javax.sql.DataSource; import java.util.concurrent.TimeUnit;  /**  * 路径：com.example.demo.security.config  * 类名：  * 功能：《用一句描述一下》  * 备注：  * 创建人：typ  * 创建时间：2018/9/26 14:25  * 修改人：  * 修改备注：  * 修改时间：  */ @Configuration public class OAuthSecurityConfig extends AuthorizationServerConfigurerAdapter{      @Autowired     private AuthenticationManager authenticationManager;      @Autowired     private DataSource dataSource;      @Bean     public TokenStore tokenStore(){         return new JdbcTokenStore(dataSource);     }      @Override     public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {         endpoints.authenticationManager(authenticationManager);         endpoints.tokenStore(tokenStore());          // 配置TokenServices参数         DefaultTokenServices tokenServices = new DefaultTokenServices();         tokenServices.setTokenStore(endpoints.getTokenStore());         tokenServices.setSupportRefreshToken(false);         tokenServices.setClientDetailsService(endpoints.getClientDetailsService());         tokenServices.setTokenEnhancer(endpoints.getTokenEnhancer());         tokenServices.setAccessTokenValiditySeconds( (int) TimeUnit.DAYS.toSeconds(30)); // 30天         endpoints.tokenServices(tokenServices);      }       @Override     public void configure(AuthorizationServerSecurityConfigurer oauthServer) throws Exception {         //oauthServer.checkTokenAccess("isAuthenticated()");         oauthServer.checkTokenAccess("permitAll()");         oauthServer.allowFormAuthenticationForClients();     }      @Bean     public ClientDetailsService clientDetails() {         return new JdbcClientDetailsService(dataSource);     }      @Override     public void configure(ClientDetailsServiceConfigurer clients) throws Exception {         clients.withClientDetails(clientDetails());         clients.inMemory()                 .withClient("client")                 .secret("secret")                 .authorizedGrantTypes("authorization_code")                 .scopes("app");     } } </code></pre> <pre><code class="language-html">安全服务配置类OAuthWebConfig.java</code></pre> <pre class="has"><code>package com.example.demo.security.config;  import org.springframework.context.annotation.Configuration; import org.springframework.security.config.annotation.web.builders.HttpSecurity; import org.springframework.security.config.annotation.web.builders.WebSecurity; import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;  /**  * 路径：com.example.demo.security.config  * 类名：  * 功能：《用一句描述一下》  * 备注：  * 创建人：typ  * 创建时间：2018/9/26 14:22  * 修改人：  * 修改备注：  * 修改时间：  */ @Configuration public class OAuthWebConfig extends WebSecurityConfigurerAdapter{      @Override     public void configure(WebSecurity web) throws Exception {         web.ignoring()                 .antMatchers("/favor.ico");     }      @Override     protected void configure(HttpSecurity http) throws Exception {         super.configure(http);     } } </code></pre> <p>自定义provider调用类SsoAuthProvider.java</p> <pre class="has"><code>package com.example.demo.security.config;  import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.security.authentication.AuthenticationProvider; import org.springframework.security.authentication.UsernamePasswordAuthenticationToken; import org.springframework.security.core.Authentication; import org.springframework.security.core.AuthenticationException; import org.springframework.security.core.GrantedAuthority; import org.springframework.stereotype.Component;  import java.util.Collections;  /**  * 路径：com.example.demo.security.config  * 类名：  * 功能：《用一句描述一下》  * 备注：  * 创建人：typ  * 创建时间：2018/9/26 14:33  * 修改人：  * 修改备注：  * 修改时间：  */ @Component public class SsoAuthProvider implements AuthenticationProvider{      private static final Logger log = LoggerFactory.getLogger(SsoAuthProvider.class);      @Override     public Authentication authenticate(Authentication authentication) throws AuthenticationException {         log.info("自定义provider调用");          返回一个Token对象表示登陆成功         return new UsernamePasswordAuthenticationToken(authentication.getPrincipal(), authentication.getCredentials(), Collections.&lt;GrantedAuthority&gt;emptyList());     }      @Override     public boolean supports(Class&lt;?&gt; aClass) {         return true;     } } </code></pre> <p>4、需要一个重定向的controller类</p> <pre class="has"><code>package com.example.demo.security.controller;  import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController; import org.springframework.web.bind.annotation.SessionAttributes;  import java.util.Map;  /**  * 路径：com.example.demo.security.controller  * 类名：  * 功能：《用一句描述一下》  * 备注：  * 创建人：typ  * 创建时间：2018/9/26 14:30  * 修改人：  * 修改备注：  * 修改时间：  */ @RestController @SessionAttributes("authorizationRequest") public class ErrorController {      private static final Logger log = LoggerFactory.getLogger(ErrorController.class);      @RequestMapping("/oauth/error")     public String error(@RequestParam Map&lt;String, String&gt; parameters){         String url = parameters.get("redirect_uri");         log.info("重定向: {}", url);         return "redirect:" + url + "?error=1";     } } </code></pre> <p>5、启动类添加注解@EnableAuthorizationServer</p> <pre class="has"><code>package com.example.demo.security;  import org.springframework.beans.factory.annotation.Autowired; import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication; import org.springframework.context.annotation.Bean; import org.springframework.security.authentication.AuthenticationManager; import org.springframework.security.authentication.AuthenticationProvider; import org.springframework.security.authentication.ProviderManager; import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;  import java.util.Arrays;  @SpringBootApplication @EnableAuthorizationServer public class SecurityOauth2Application {  	public static void main(String[] args) { 		SpringApplication.run(SecurityOauth2Application.class, args); 	}  	@Autowired 	private AuthenticationProvider authenticationProvider;  	@Bean 	public AuthenticationManager authenticationManager(){ 		return new ProviderManager(Arrays.asList(authenticationProvider)); 	} } </code></pre> <p>6、创建数据库及相关表</p> <pre class="has"><code># Host: 127.0.0.1  (Version 5.7.21) # Date: 2018-09-26 15:17:51 # Generator: MySQL-Front 6.0  (Build 2.20)   # # Structure for table "clientdetails" #  DROP TABLE IF EXISTS `clientdetails`; CREATE TABLE `clientdetails` (   `appId` varchar(128) NOT NULL,   `resourceIds` varchar(256) DEFAULT NULL,   `appSecret` varchar(256) DEFAULT NULL,   `scope` varchar(256) DEFAULT NULL,   `grantTypes` varchar(256) DEFAULT NULL,   `redirectUrl` varchar(256) DEFAULT NULL,   `authorities` varchar(256) DEFAULT NULL,   `access_token_validity` int(11) DEFAULT NULL,   `refresh_token_validity` int(11) DEFAULT NULL,   `additionalInformation` varchar(4096) DEFAULT NULL,   `autoApproveScopes` varchar(256) DEFAULT NULL,   PRIMARY KEY (`appId`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  # # Data for table "clientdetails" #   # # Structure for table "oauth_access_token" #  DROP TABLE IF EXISTS `oauth_access_token`; CREATE TABLE `oauth_access_token` (   `token_id` varchar(256) DEFAULT NULL,   `token` blob,   `authentication_id` varchar(128) NOT NULL,   `user_name` varchar(256) DEFAULT NULL,   `client_id` varchar(256) DEFAULT NULL,   `authentication` blob,   `refresh_token` varchar(256) DEFAULT NULL,   PRIMARY KEY (`authentication_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  # # Data for table "oauth_access_token" #   # # Structure for table "oauth_approvals" #  DROP TABLE IF EXISTS `oauth_approvals`; CREATE TABLE `oauth_approvals` (   `userId` varchar(256) DEFAULT NULL,   `clientId` varchar(256) DEFAULT NULL,   `scope` varchar(256) DEFAULT NULL,   `status` varchar(10) DEFAULT NULL,   `expiresAt` datetime DEFAULT NULL,   `lastModifiedAt` datetime DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  # # Data for table "oauth_approvals" #   # # Structure for table "oauth_client_details" #  DROP TABLE IF EXISTS `oauth_client_details`; CREATE TABLE `oauth_client_details` (   `client_id` varchar(128) NOT NULL,   `resource_ids` varchar(256) DEFAULT NULL,   `client_secret` varchar(256) DEFAULT NULL,   `scope` varchar(256) DEFAULT NULL,   `authorized_grant_types` varchar(256) DEFAULT NULL,   `web_server_redirect_uri` varchar(256) DEFAULT NULL,   `authorities` varchar(256) DEFAULT NULL,   `access_token_validity` int(11) DEFAULT NULL,   `refresh_token_validity` int(11) DEFAULT NULL,   `additional_information` varchar(4096) DEFAULT NULL,   `autoapprove` varchar(256) DEFAULT NULL,   PRIMARY KEY (`client_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  # # Data for table "oauth_client_details" #  INSERT INTO `oauth_client_details` VALUES ('client',NULL,'secret','app','authorization_code','http://www.baidu.com',NULL,NULL,NULL,NULL,NULL);  # # Structure for table "oauth_client_token" #  DROP TABLE IF EXISTS `oauth_client_token`; CREATE TABLE `oauth_client_token` (   `token_id` varchar(256) DEFAULT NULL,   `token` blob,   `authentication_id` varchar(128) NOT NULL,   `user_name` varchar(256) DEFAULT NULL,   `client_id` varchar(256) DEFAULT NULL,   PRIMARY KEY (`authentication_id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  # # Data for table "oauth_client_token" #   # # Structure for table "oauth_code" #  DROP TABLE IF EXISTS `oauth_code`; CREATE TABLE `oauth_code` (   `code` varchar(256) DEFAULT NULL,   `authentication` blob ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  # # Data for table "oauth_code" #   # # Structure for table "oauth_refresh_token" #  DROP TABLE IF EXISTS `oauth_refresh_token`; CREATE TABLE `oauth_refresh_token` (   `token_id` varchar(256) DEFAULT NULL,   `token` blob,   `authentication` blob ) ENGINE=InnoDB DEFAULT CHARSET=utf8;  # # Data for table "oauth_refresh_token" #  </code></pre> <p>在oauth_client_details表中添加一条数据</p> <pre class="has"><code>INSERT INTO `oauth_client_details` VALUES ('client',NULL,'secret','app','authorization_code','http://www.baidu.com',NULL,NULL,NULL,NULL,NULL); </code></pre> <p>启动工程，浏览器访问：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8081/oauth/authorize?client_id=client&amp;response_type=code&amp;redirect_uri=http://www.baidu.com"  rel="nofollow">http://localhost:8081/oauth/authorize?client_id=client&amp;response_type=code&amp;redirect_uri=http://www.baidu.com</a></p> <div>  <img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads/20230113/574f69a646b70268401c0a1a8dd74a70.jpg"> </div> <p>&nbsp;</p> <p>点击Authorize会跳转到百度页面，因为数据库中配置的是百度页面。</p> <p>&nbsp;</p> <h3>四、OAuth的思路</h3> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;OAuth在"客户端"与"服务提供商"之间，设置了一个授权层（authorization layer）。"客户端"不能直接登录"服务提供商"，只能登录授权层，以此将用户与客户端区分开来。"客户端"登录授权层所用的令牌（token），与用户的密码不同。用户可以在登录的时候，指定授权层令牌的权限范围和有效期。</p> <p>"客户端"登录授权层以后，"服务提供商"根据令牌的权限范围和有效期，向"客户端"开放用户储存的资料。</p> <p>OAuth 2.0的运行流程：</p> <p><img decoding="async" alt="OAuth运行流程" class="has" src="http://img.555519.xyz/uploads/20230113/540a667ced1d2561126796d0f28888b7.jpg"></p> <blockquote> <p>（A）用户打开客户端以后，客户端要求用户给予授权。</p> <p>（B）用户同意给予客户端授权。</p> <p>（C）客户端使用上一步获得的授权，向认证服务器申请令牌。</p> <p>（D）认证服务器对客户端进行认证以后，确认无误，同意发放令牌。</p> <p>（E）客户端使用令牌，向资源服务器申请获取资源。</p> <p>（F）资源服务器确认令牌无误，同意向客户端开放资源。</p> </blockquote> <p>在上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。</p> <h3>五、客户端的授权模式</h3> <p>客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。</p> <p>OAuth 2.0定义了四种授权方式：</p> <ul> <li>授权码模式（authorization code）</li> <li>简化模式（implicit）</li> <li>密码模式（resource owner password credentials）</li> <li>客户端模式（client credentials）</li> </ul> <p><strong>1、授权码模式</strong></p> <p>&nbsp; &nbsp; &nbsp; 授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。</p> <p><img decoding="async" alt="授权码模式" class="has" src="http://img.555519.xyz/uploads/20230113/3929f909577479cfc3403653f928c58f.jpg"></p> <p>步骤如下：</p> <blockquote> <p>（A）用户访问客户端，后者将前者导向认证服务器。</p> <p>（B）用户选择是否给予客户端授权。</p> <p>（C）假设用户给予授权，认证服务器将用户导向客户端事先指定的"重定向URI"（redirection URI），同时附上一个授权码。</p> <p>（D）客户端收到授权码，附上早先的"重定向URI"，向认证服务器申请令牌。这一步是在客户端的后台的服务器上完成的，对用户不可见。</p> <p>（E）认证服务器核对了授权码和重定向URI，确认无误后，向客户端发送访问令牌（access token）和更新令牌（refresh token）。</p> </blockquote> <p><strong>2、简化模式</strong></p> <p>&nbsp; &nbsp; &nbsp;简化模式（implicit grant type）不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了"授权码"这个步骤，因此得名。所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。</p> <p><img decoding="async" alt="简化模式" class="has" src="http://img.555519.xyz/uploads/20230113/1073c6304d744c80f2f4c81da8a1c64e.jpg"></p> <p>步骤如下：</p> <blockquote> <p>（A）客户端将用户导向认证服务器。</p> <p>（B）用户决定是否给于客户端授权。</p> <p>（C）假设用户给予授权，认证服务器将用户导向客户端指定的"重定向URI"，并在URI的Hash部分包含了访问令牌。</p> <p>（D）浏览器向资源服务器发出请求，其中不包括上一步收到的Hash值。</p> <p>（E）资源服务器返回一个网页，其中包含的代码可以获取Hash值中的令牌。</p> <p>（F）浏览器执行上一步获得的脚本，提取出令牌。</p> <p>（G）浏览器将令牌发给客户端。</p> </blockquote> <p><strong>3、密码模式</strong></p> <p>&nbsp; &nbsp; &nbsp;密码模式（Resource Owner Password Credentials Grant）中，用户向客户端提供自己的用户名和密码。客户端使用这些信息，向"服务商提供商"索要授权。</p> <p>&nbsp; &nbsp; &nbsp;在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。</p> <p><img decoding="async" alt="密码模式" class="has" src="http://img.555519.xyz/uploads/20230113/0f7c5337cd034740102a19dab027e38a.jpg"></p> <p>步骤如下：</p> <blockquote> <p>（A）用户向客户端提供用户名和密码。</p> <p>（B）客户端将用户名和密码发给认证服务器，向后者请求令牌。</p> <p>（C）认证服务器确认无误后，向客户端提供访问令牌。</p> </blockquote> <p><strong>4、客户端模式</strong></p> <p>&nbsp; &nbsp; &nbsp;客户端模式（Client Credentials Grant）指客户端以自己的名义，而不是以用户的名义，向"服务提供商"进行认证。严格地说，客户端模式并不属于OAuth框架所要解决的问题。在这种模式中，用户直接向客户端注册，客户端以自己的名义要求"服务提供商"提供服务，其实不存在授权问题。</p> <p><img decoding="async" alt="客户端模式" class="has" src="http://img.555519.xyz/uploads/20230113/ca3f87ca93c0c1a8b184d459be66a7df.jpg"></p> <p>步骤如下：</p> <blockquote> <p>（A）客户端向认证服务器进行身份认证，并要求一个访问令牌。</p> <p>（B）认证服务器确认无误后，向客户端提供访问令牌。</p> </blockquote> <h3>六、更新令牌</h3> <p>&nbsp; &nbsp; &nbsp; &nbsp;如果用户访问的时候，客户端的"访问令牌"已经过期，则需要使用"更新令牌"申请一个新的访问令牌。</p> <p>客户端发出更新令牌的HTTP请求，包含以下参数：</p> <ul> <li>grant<em>type：表示使用的授权模式，此处的值固定为"refresh</em>token"，必选项。</li> <li>refresh_token：表示早前收到的更新令牌，必选项。</li> <li>scope：表示申请的授权范围，不可以超出上一次申请的范围，如果省略该参数，则表示与上一次一致。</li> </ul> <h3>源码</h3> <p>码云：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/typ1805/springcloud-master"  rel="nofollow">https://gitee.com/typ1805/springcloud-master</a><span style="font-size: 16px;">&nbsp;</span></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-20211.htm">女生技校最吃香的专业（女生技校最吃香的专业有哪些）</a></p>
                                        <p>下一个：<a href="/news/article-20670.htm">附近哪里有狗粮卖（附近哪里有狗粮卖的地方）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-13-hiddify-next-node-share.htm" title="「10月13日」最高速度18M/S，2024年HiddifyNext每天更新免费节点订阅链接">「10月13日」最高速度18M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-6-free-node-subscribe-links.htm" title="「9月6日」最高速度19.1M/S，2024年HiddifyNext每天更新免费节点订阅链接">「9月6日」最高速度19.1M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-node-share-links.htm" title="「11月21日」最高速度19.8M/S，2024年HiddifyNext每天更新免费节点订阅链接">「11月21日」最高速度19.8M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-4-hiddify-next-node.htm" title="「12月4日」最高速度18.8M/S，2024年HiddifyNext每天更新免费节点订阅链接">「12月4日」最高速度18.8M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-25-free-subscribe-node.htm" title="「9月25日」最高速度19.4M/S，2024年HiddifyNext每天更新免费节点订阅链接">「9月25日」最高速度19.4M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-17-free-high-speed-nodes.htm" title="「8月17日」最高速度20.1M/S，2024年HiddifyNext每天更新免费节点订阅链接">「8月17日」最高速度20.1M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-12-free-hiddify-next-node.htm" title="「9月12日」最高速度20.4M/S，2024年HiddifyNext每天更新免费节点订阅链接">「9月12日」最高速度20.4M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-20-hiddify-next-node.htm" title="「8月20日」最高速度19.4M/S，2024年HiddifyNext每天更新免费节点订阅链接">「8月20日」最高速度19.4M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-26-node-share-links.htm" title="「10月26日」最高速度18M/S，2024年HiddifyNext每天更新免费节点订阅链接">「10月26日」最高速度18M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-21-free-hiddify-next-node.htm" title="「10月21日」最高速度21.2M/S，2024年HiddifyNext每天更新免费节点订阅链接">「10月21日」最高速度21.2M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <div class="footer-bottom py-3 text-center">
        <div class="container-lg">
            <p class="m-0">
                HiddifyNextGithub免费节点官网 版权所有 Powered by WordPress
            </p>
        </div>
    </div>
    <script src="/assets/website/js/frontend/hiddifynextgithub/jquery-1.11.0.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.2/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/10.3.1/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextgithub/plugins.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextgithub/script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>