<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifynextgithub.github.io/news/article-34225.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <title>Node.js躬行记半吊子的可视化搭建系统</title>
        <meta name="description" content="　　我们组维护的管理后台会接到很多开发需求，每次新开页面，就会到处复制黏贴相关代码。 　　并且还会经常性的翻阅文档，先在书签或地址栏输入WIKI地址，然后找到那一份说明文档，再定位到要看的组件位置。 " />
        <link rel="icon" href="/assets/website/img/hiddifynextgithub/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/10.3.1/swiper-bundle.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/hiddifynextgithub/vendor.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/hiddifynextgithub/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LL7EDWRR8Q"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LL7EDWRR8Q');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol xmlns="http://www.w3.org/2000/svg" id="navbar-icon" viewBox="0 0 16 16">
            <path d="M14 10.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 .5-.5zm0-3a.5.5 0 0 0-.5-.5h-7a.5.5 0 0 0 0 1h7a.5.5 0 0 0 .5-.5zm0-3a.5.5 0 0 0-.5-.5h-11a.5.5 0 0 0 0 1h11a.5.5 0 0 0 .5-.5z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="facebook" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12c0 4.84 3.44 8.87 8 9.8V15H8v-3h2V9.5C10 7.57 11.57 6 13.5 6H16v3h-2c-.55 0-1 .45-1 1v2h3v3h-3v6.95c5.05-.5 9-4.76 9-9.95z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="youtube" viewBox="0 0 32 32">
            <path fill="currentColor" d="M29.41 9.26a3.5 3.5 0 0 0-2.47-2.47C24.76 6.2 16 6.2 16 6.2s-8.76 0-10.94.59a3.5 3.5 0 0 0-2.47 2.47A36.13 36.13 0 0 0 2 16a36.13 36.13 0 0 0 .59 6.74a3.5 3.5 0 0 0 2.47 2.47c2.18.59 10.94.59 10.94.59s8.76 0 10.94-.59a3.5 3.5 0 0 0 2.47-2.47A36.13 36.13 0 0 0 30 16a36.13 36.13 0 0 0-.59-6.74ZM13.2 20.2v-8.4l7.27 4.2Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="instagram" viewBox="0 0 256 256">
            <path fill="currentColor" d="M128 80a48 48 0 1 0 48 48a48.05 48.05 0 0 0-48-48Zm0 80a32 32 0 1 1 32-32a32 32 0 0 1-32 32Zm48-136H80a56.06 56.06 0 0 0-56 56v96a56.06 56.06 0 0 0 56 56h96a56.06 56.06 0 0 0 56-56V80a56.06 56.06 0 0 0-56-56Zm40 152a40 40 0 0 1-40 40H80a40 40 0 0 1-40-40V80a40 40 0 0 1 40-40h96a40 40 0 0 1 40 40ZM192 76a12 12 0 1 1-12-12a12 12 0 0 1 12 12Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="twitter" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22.46 6c-.77.35-1.6.58-2.46.69c.88-.53 1.56-1.37 1.88-2.38c-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29c0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15c0 1.49.75 2.81 1.91 3.56c-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07a4.28 4.28 0 0 0 4 2.98a8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21C16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56c.84-.6 1.56-1.36 2.14-2.23Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="linkedin" viewBox="0 0 512 512">
            <path fill="currentColor" d="M444.17 32H70.28C49.85 32 32 46.7 32 66.89v374.72C32 461.91 49.85 480 70.28 480h373.78c20.54 0 35.94-18.21 35.94-38.39V66.89C480.12 46.7 464.6 32 444.17 32Zm-273.3 373.43h-64.18V205.88h64.18ZM141 175.54h-.46c-20.54 0-33.84-15.29-33.84-34.43c0-19.49 13.65-34.42 34.65-34.42s33.85 14.82 34.31 34.42c-.01 19.14-13.31 34.43-34.66 34.43Zm264.43 229.89h-64.18V296.32c0-26.14-9.34-44-32.56-44c-17.74 0-28.24 12-32.91 23.69c-1.75 4.2-2.22 9.92-2.22 15.76v113.66h-64.18V205.88h64.18v27.77c9.34-13.3 23.93-32.44 57.88-32.44c42.13 0 74 27.77 74 87.64Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="arrow-down" viewBox="0 0 32 32">
            <path fill="currentColor" d="M24.59 16.59L17 24.17V4h-2v20.17l-7.59-7.58L6 18l10 10l10-10l-1.41-1.41z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="cart" viewBox="0 0 512 512">
            <path fill="currentColor" d="M160 96.039v32h304v63.345l-35.5 112.655H149.932L109.932 16H16v32h66.068l40 288.039h329.9L496 196.306V96.039H160zm16.984 272.305a64.073 64.073 0 0 0-64 64a64 64 0 0 0 128 0a64.072 64.072 0 0 0-64-64Zm0 96a32 32 0 1 1 32-32a32.038 32.038 0 0 1-32 32Zm224-96a64.073 64.073 0 0 0-64 64a64 64 0 0 0 128 0a64.072 64.072 0 0 0-64-64Zm0 96a32 32 0 1 1 32-32a32.038 32.038 0 0 1-32 32Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="balloon" viewBox="0 0 24 24">
            <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                <path d="M8 16.607c1.15.86 2.518 1.38 4 1.393c4.142.034 7.594-3.92 7.56-8.196C19.527 5.53 16.142 2.034 12 2c-4.142-.034-7.473 3.404-7.44 7.68A8.88 8.88 0 0 0 5.244 13" />
                <path d="M15.5 9a3.035 3.035 0 0 0-3-3M12 20.35c.321 0 .482 0 .593-.022c.654-.128 1.051-.772.858-1.39c-.033-.105-.109-.242-.261-.515M12 20.35c-.321 0-.482 0-.593-.022c-.654-.128-1.051-.772-.858-1.39c.033-.105.109-.242.261-.515M12 20.35v2.15" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="bag-heart" viewBox="0 0 24 24">
            <g fill="none">
                <path fill="currentColor" d="m12 12.191l-.519.542a.75.75 0 0 0 1.038 0L12 12.191Zm-.957 3.675l-.444.604l.444-.604Zm1.914 0l-.444-.605l.444.605Zm-.957.462v.75v-.75Zm-.514-1.067c-.417-.307-.878-.69-1.227-1.093c-.368-.426-.509-.757-.509-.971h-1.5c0 .77.441 1.45.875 1.952c.453.525 1.014.984 1.474 1.321l.887-1.21ZM9.75 13.197c0-.576.263-.827.492-.907c.25-.088.714-.06 1.24.443l1.037-1.083c-.825-.79-1.861-1.096-2.773-.776c-.934.327-1.496 1.226-1.496 2.323h1.5Zm3.65 3.273c.46-.337 1.022-.796 1.475-1.32c.434-.502.875-1.183.875-1.953h-1.5c0 .214-.141.545-.51.971c-.348.403-.809.786-1.226 1.093l.887 1.21Zm2.35-3.273c0-1.097-.563-1.996-1.496-2.323c-.912-.32-1.948-.014-2.773.776l1.038 1.083c.525-.503.989-.531 1.24-.443c.228.08.491.33.491.907h1.5ZM10.6 16.47c.368.27.782.608 1.4.608v-1.5c-.024 0-.04 0-.094-.03a4 4 0 0 1-.42-.287l-.887 1.21Zm1.914-1.21a4 4 0 0 1-.42.289c-.054.029-.07.029-.094.029v1.5c.618 0 1.032-.337 1.4-.608l-.886-1.21Z" />
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M9 6V5a3 3 0 1 1 6 0v1m5.224 6.526c-.586-3.121-.878-4.682-1.99-5.604C17.125 6 15.537 6 12.36 6h-.72c-3.176 0-4.764 0-5.875.922c-1.11.922-1.403 2.483-1.989 5.604c-.823 4.389-1.234 6.583-.034 8.029C4.942 22 7.174 22 11.639 22h.722c4.465 0 6.698 0 7.897-1.445c.696-.84.85-1.93.696-3.555" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="handiplast" viewBox="0 0 24 24">
            <g fill="none">
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M13.5 7.642L9.071 3.213a4.142 4.142 0 0 0-5.858 5.858L14.93 20.787a4.142 4.142 0 0 0 5.858-5.858l-4.358-4.358" />
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="m12 17.858l-2.929 2.929A4.142 4.142 0 0 1 2.596 20m3.546-8l-2.929 2.929c-.322.322-.58.685-.774 1.071M12 6.142l2.929-2.929a4.142 4.142 0 1 1 5.858 5.858L17.857 12" />
                <path fill="currentColor" d="M15.841 12.871a.788.788 0 1 1-1.114 1.114a.788.788 0 0 1 1.114-1.114Zm-3.712-3.712a.787.787 0 1 0-1.114 1.114a.787.787 0 0 0 1.114-1.114Zm4.641 6.497a.787.787 0 1 1-1.114 1.114a.787.787 0 0 1 1.114-1.114ZM9.345 8.23A.788.788 0 1 0 8.23 9.346A.788.788 0 0 0 9.345 8.23Zm3.712 3.713a.787.787 0 1 1-1.113 1.114a.787.787 0 0 1 1.113-1.114Zm.928 2.785a.788.788 0 1 1-1.114 1.113a.788.788 0 0 1 1.114-1.113Zm-3.712-3.713a.787.787 0 1 0-1.114 1.114a.787.787 0 0 0 1.114-1.114Z" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="star-fill" viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="star-empty" viewBox="0 0 16 16">
            <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="play" viewBox="0 0 32 32">
            <path fill="currentColor" d="M7 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.482-.876l20 11a1 1 0 0 1 0 1.752l-20 11A1 1 0 0 1 7 28ZM8 6.69v18.62L24.925 16Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="call-chat" viewBox="0 0 24 24">
            <path fill="currentColor" fill-rule="evenodd" d="M17 2.75a4.25 4.25 0 0 0-3.807 6.142c.16.32.225.71.12 1.102l-.253.946l.946-.253a1.567 1.567 0 0 1 1.102.12A4.25 4.25 0 1 0 17 2.75ZM11.25 7a5.75 5.75 0 1 1 3.19 5.15a.126.126 0 0 0-.04-.013h-.007l-1.112.297a1.4 1.4 0 0 1-1.715-1.714l.298-1.113V9.6a.126.126 0 0 0-.014-.04a5.73 5.73 0 0 1-.6-2.56ZM3.718 4.092c1.226-1.29 3.254-1.049 4.268.385l1.26 1.783c.811 1.147.743 2.74-.225 3.76l-.245.257c0 .002 0 .004-.002.006c-.013.037-.045.152-.013.372c.067.456.418 1.381 1.846 2.884c1.432 1.508 2.3 1.864 2.703 1.929a.608.608 0 0 0 .294-.007l.408-.43c.874-.92 2.236-1.101 3.335-.469l1.91 1.1c1.633.94 2.013 3.239.708 4.613l-1.42 1.495c-.443.467-1.048.866-1.795.94c-1.824.18-6.049-.055-10.478-4.718c-4.134-4.352-4.919-8.137-5.018-9.986c-.049-.914.358-1.697.894-2.261l.544.516l-.544-.516l1.57-1.653Zm3.043 1.25c-.512-.724-1.433-.767-1.956-.217l-1.57 1.653c-.33.349-.505.748-.483 1.148c.08 1.51.731 4.952 4.607 9.033c4.064 4.279 7.809 4.4 9.244 4.258c.283-.028.575-.186.854-.48l1.42-1.495c.614-.645.453-1.808-.368-2.28l-1.91-1.1c-.513-.295-1.114-.204-1.499.202l-.455.48l-.544-.517c.543.517.543.517.542.518l-.001.002l-.003.003l-.007.006l-.014.014a1.003 1.003 0 0 1-.136.112c-.08.057-.186.12-.321.172c-.276.11-.64.168-1.091.095c-.878-.143-2.028-.773-3.55-2.377c-1.528-1.608-2.113-2.807-2.243-3.7c-.067-.454-.014-.817.084-1.092a1.592 1.592 0 0 1 .23-.427l.03-.037l.014-.015l.006-.006l.003-.003l.002-.002s.001-.001.545.515l-.544-.516l.287-.302c.445-.47.51-1.264.088-1.86L6.76 5.342Z" clip-rule="evenodd" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="mail" viewBox="0 0 21 21">
            <g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3.5 6.5v8a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2h-10a2 2 0 0 0-2 2z" />
                <path d="m5.5 7.5l5 3l5-3" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="location" viewBox="0 0 24 24">
            <path fill="currentColor" fill-rule="evenodd" d="M5.25 7.7c0-3.598 3.059-6.45 6.75-6.45c3.608 0 6.612 2.725 6.745 6.208l.478.16c.463.153.87.289 1.191.439c.348.162.667.37.911.709c.244.338.341.707.385 1.088c.04.353.04.78.04 1.269v5.748c0 .61 0 1.13-.047 1.547c-.05.438-.161.87-.463 1.237a2.25 2.25 0 0 1-.62.525c-.412.237-.855.276-1.296.253c-.42-.022-.933-.107-1.534-.208l-.041-.007c-1.293-.215-1.814-.296-2.322-.254a4.3 4.3 0 0 0-.552.083c-.498.109-.976.342-2.159.933l-.122.061c-1.383.692-2.234 1.118-3.154 1.251c-.276.04-.555.06-.835.06c-.928-.002-1.825-.301-3.28-.786a73.75 73.75 0 0 1-.127-.043l-.384-.128l-.037-.012c-.463-.154-.87-.29-1.191-.44c-.348-.162-.667-.37-.911-.709c-.244-.338-.341-.707-.385-1.088c-.04-.353-.04-.78-.04-1.269v-5.02c0-.786 0-1.448.067-1.967c.07-.542.23-1.072.666-1.47a2.25 2.25 0 0 1 .42-.304c.517-.287 1.07-.27 1.605-.166c.11.021.223.047.342.078c-.066-.446-.1-.89-.1-1.328Zm.499 3.01a9.414 9.414 0 0 0-1.028-.288c-.395-.077-.525-.03-.586.004a.747.747 0 0 0-.14.101c-.053.048-.138.156-.19.556c-.053.41-.055.974-.055 1.825v4.93c0 .539.001.88.03 1.138c.028.238.072.327.112.381c.039.055.109.125.326.226c.236.11.56.219 1.07.39l.384.127c1.624.541 2.279.75 2.936.752c.207 0 .413-.015.617-.044c.65-.094 1.276-.397 2.82-1.17l.093-.046c1.06-.53 1.714-.857 2.417-1.01c.246-.054.496-.092.747-.113c.717-.06 1.432.06 2.593.253l.1.017c.655.109 1.083.18 1.407.196c.312.016.419-.025.471-.055a.749.749 0 0 0 .207-.175c.039-.047.097-.146.132-.456c.037-.323.038-.757.038-1.42v-5.667c0-.539-.001-.88-.03-1.138c-.028-.238-.072-.327-.112-.381c-.039-.055-.109-.125-.326-.226c-.236-.11-.56-.219-1.07-.39l-.06-.019a10.701 10.701 0 0 1-1.335 3.788c-.912 1.568-2.247 2.934-3.92 3.663a3.505 3.505 0 0 1-2.794 0c-1.673-.73-3.008-2.095-3.92-3.663a10.856 10.856 0 0 1-.934-2.087ZM12 2.75c-2.936 0-5.25 2.252-5.25 4.95c0 1.418.437 2.98 1.23 4.341c.791 1.362 1.908 2.47 3.223 3.044c.505.22 1.089.22 1.594 0c1.316-.574 2.432-1.682 3.224-3.044c.792-1.36 1.229-2.923 1.229-4.34c0-2.699-2.314-4.951-5.25-4.951Zm0 4a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5ZM9.25 8a2.75 2.75 0 1 1 5.5 0a2.75 2.75 0 0 1-5.5 0Z" clip-rule="evenodd" />
        </symbol>
    </svg>
    <header id="header" class="site-header position-fixed z-2 w-100 border-bottom mb-5">
        <nav id="header-nav" class="navbar navbar-expand-lg py-3">
            <div class="container-lg">
                                <a class="navbar-brand pb-4" href="/">
                    <span>Hiddify Next Github</span>
                </a>
                                <button class="navbar-toggler d-flex d-lg-none order-3 p-2 border-0 shadow-none bg-white" type="button" data-bs-toggle="offcanvas" data-bs-target="#bdNavbar" aria-controls="bdNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <svg class="navbar-icon" width="50" height="50">
                        <use xlink:href="#navbar-icon"></use>
                    </svg>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="bdNavbar" aria-labelledby="bdNavbarOffcanvasLabel">
                    <div class="offcanvas-header px-4 pb-0">
                        <button type="button" class="btn-close btn-close-black" data-bs-dismiss="offcanvas" aria-label="Close" data-bs-target="#bdNavbar"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav scrollspy-nav justify-content-end flex-grow-1 gap-lg-5 pe-3">
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/news/">新闻资讯</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="#">关于</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" href="#">联系</a>
                            </li>
                            
                            <span class="scrollspy-indicator"></span>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <section id="intro" class="scrollspy-section bg-light" style="background: url(__ADDON__/img/hiddifynextgithub/bg-pattern.png) no-repeat;background-size: cover;">
        <div class="container-lg py-5">
            <div class="row justify-content-center py-5">
                <div class="col-lg-10 text-center">
                    <h1 class="display-2 fw-bold mt-5 pt-5">Node.js躬行记半吊子的可视化搭建系统</h1>
                    <nav class="breadcrumb justify-content-center">
                        <a class="breadcrumb-item" href="/">首页</a>
                        <a class="breadcrumb-item" href="/news/">新闻资讯</a>
                        <span class="breadcrumb-item active" aria-current="page">正文</span>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <section id="why" class="scrollspy-section py-5 my-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>　　我们组维护的管理后台会接到很多开发需求，每次新开页面，就会到处复制黏贴相关代码。</p> <p>　　并且还会经常性的翻阅文档，先在书签或地址栏输入WIKI地址，然后找到那一份说明文档，再定位到要看的组件位置。</p> <p>　　虽然单人损耗的时间并不是非常多，但还是会打断思路，影响开发的流畅性，当把所有人的时间累加起来，那损耗的时间也很可观。</p> <p>　　为了能提升团队成员的开发效率，就开始构思一套可视化搭建系统。理想状态下，拖动组件，配置交互和样式，页面生成，直接可用。</p> <p>　　但是要完成这套功能，开发成本比较大，现在我想先解决当前的痛点，减少代码复制的频率和快速读取组件文档。</p> <p>　　为此，在构思了好多天后，打算搞一个半吊子的可视化搭建系统。</p> <p>　　所谓半吊子是指搭建完后，点击生成，会在后台创建视图和数据两个脚本文件、自动添加权限、新增菜单栏，不过后续我们还得继续做开发，完善页面功能。</p> </h1> <p>　　界面分成左右两部分，左边是配置区域，右边空白处是组件的预览区域。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6c91afe56c60f194b91e9600c556324b.jpg" alt="Node.js躬行记半吊子的可视化搭建系统" width="800"/></p> <p><span style="font-size: 16px"><strong>1）组件区域</strong></span></p> <p>　　组件区域的第一个下拉框可以选择Ant Design和部分模板组件，选中后，会替换组件地址的链接，点击就能跳转到组件的说明文档。</p> <p>　　第二个下拉框能选择页面中需要的组件，例如图中的提示组件，点击添加后会在右边显示，并且还会提供一个删除图标，目前暂不支持拖动效果。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e54b9ec93660f8b1dc6d796fda6d0adf.jpg" alt="Node.js躬行记半吊子的可视化搭建系统" width="800"/></p> <p><span style="font-size: 16px"><strong>2）配置区域</strong></span></p> <p>　　在配置区域中，可以输入菜单名称、路由、文件目录和权限等信息。</p> <p>　　原先的话，还得手动的在路由和权限两个文件中新增配置项，现在都能自动化了。</p> <p>　　原理就是先用Node分别读取这两份文件，得到一个数组，然后将配置内容塞到此数组中，再将数组序列化写入文件内。</p> <p>　　注意，需求在引入模块（调用require()函数）前删除模块缓存，否则读到的将是之前的文件内容。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">权限文件的绝对路径</span> const absAuthorityPath = pathObj.resolve(__dirname, 'src/utils/authority.ts'<span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 0, 255, 1)">delete</span> require.cache[absAuthorityPath];<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">删除模块缓存</span> const authorities =<span style="color: rgba(0, 0, 0, 1)"> require(absAuthorityPath); const obj</span>=<span style="color: rgba(0, 0, 0, 1)"> {   id: authority,   pid: parent,   name: menu,   desc:</span>''<span style="color: rgba(0, 0, 0, 1)">,   routers: currentPath, }; authorities.push(obj);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">添加权限</span><span style="color: rgba(0, 128, 0, 1)"> //</span><span style="color: rgba(0, 128, 0, 1)">写入文件</span> fs.writeFileSync(absAuthorityPath, `module.exports = ${JSON.stringify(authorities,<span style="color: rgba(0, 0, 255, 1)">null</span>, 2)}`);</pre> </div> <p>　　fs.writeFileSync()用于同步写入文件。module.exports是Node的模块语法，而export default是ES6语法，Node原生并不支持，好在webpack对于这些模块化语法都支持。</p> <p>　　一旦点击生成文件按钮，在项目重新构建后，左边菜单列表就能出现刚刚配置的菜单名称（例如名称叫菜单测试），并且能够跳转，权限也加好了。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3b6c1d0d21461472dee98696fbdb4779.jpg" alt="Node.js躬行记半吊子的可视化搭建系统" width="300"/></p> <p>　　视图和数据文件也是用Node创建的，在Node项目中写好一份模板字符串（下面是生成视图模板的函数），将可变部分作为参数传入。</p> <div class="cnblogs_code"> <pre>export<span style="color: rgba(0, 0, 255, 1)">function</span> setPageTemplate({name, antd, namespace, code=''<span style="color: rgba(0, 0, 0, 1)">, props, component}) {</span><span style="color: rgba(0, 0, 255, 1)">return</span> `import { connect, Dispatch, ${namespace}ModelState } from "umi"<span style="color: rgba(0, 0, 0, 1)">; import { setColumn } from</span>'@/utils/tools'<span style="color: rgba(0, 0, 0, 1)">; import { TEMPLATE_MODEL } from</span>'@/utils/constants'<span style="color: rgba(0, 0, 0, 1)">; ${antd}</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 页面参数类型</span><span style="color: rgba(0, 0, 0, 1)">interface ${name}Props {   dispatch: Dispatch;   state: ${namespace}ModelState; }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 全局声明</span><span style="color: rgba(0, 0, 0, 1)">${code} const ${name}</span>= ({ dispatch, state }: ${name}Props) =&gt;<span style="color: rgba(0, 0, 0, 1)"> {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> dispatch({ type: "xx/xx", payload: {} });</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 状态</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> const { } = state;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 通用组件配置</span><span style="color: rgba(0, 0, 0, 1)">  ${props}</span><span style="color: rgba(0, 0, 255, 1)">return</span> &lt;&gt;<span style="color: rgba(0, 0, 0, 1)">     ${component}</span>&lt;/&gt;;<span style="color: rgba(0, 0, 0, 1)">}; export</span><span style="color: rgba(0, 0, 255, 1)">default</span> connect((data: {${namespace}: ${namespace}ModelState}) =&gt;<span style="color: rgba(0, 0, 0, 1)"> ({ state: data.${namespace} }))(${name});`; }</span></pre> </div> </h1> <p>　　配置是本系统的核心，构思了很久，原先考虑了系统的灵活性，就想直接提供脚本编辑框，自定义逻辑。</p> <p>　　不过出现个问题，那就是我这边目前是用TypeScript语言开发的，那么我在自定义脚本逻辑时，也需要使用TypeScript语法。</p> <p>　　浏览器提供的<span style="color: rgba(51, 102, 255, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval"  target="_blank" rel="nofollow"><span style="color: rgba(51, 102, 255, 1)">eval()</span></a></span> 函数并不支持TypeScript语法，需要先做转译，网上搜索后，得到了解决方案，下载了TypeScript库后。</p> <p>　　但是却一直报错，在网上也查到了些解决方案（<span style="color: rgba(51, 102, 255, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/microsoft/TypeScript/issues/39436"  target="_blank" rel="nofollow"><span style="color: rgba(51, 102, 255, 1)">方案一</span></a></span>，<span style="color: rgba(51, 102, 255, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://stackoverflow.com/questions/45153848/evaluate-typescript-from-string"  target="_blank" rel="nofollow"><span style="color: rgba(51, 102, 255, 1)">方案二</span></a></span>），不过并不适用于我目前的项目环境。</p> <div class="cnblogs_code"> <pre>./node_modules/typescript/lib/<span style="color: rgba(0, 0, 0, 1)">typescript.js Critical dependency: the request of a dependency is an expression  .</span>/node_modules/typescript/lib/<span style="color: rgba(0, 0, 0, 1)">typescript.js Critical dependency: the request of a dependency is an expression  .</span>/node_modules/typescript/lib/<span style="color: rgba(0, 0, 0, 1)">typescript.js Module not found: Can</span>'t resolve 'perf_hooks' in 'C:\Users\User\node_modules\typescript\lib'</pre> </div> <p>　　最终决定暂时放弃自定义脚本逻辑，先解决当前痛点，尽快将系统上线。</p> <p>　　期间还遇到个比较隐蔽的bug，如下所示，数组会先调用 toString() 转换成字符串，最终变为 eval("(1, 2)")，所以得到的值是 2。</p> <div class="cnblogs_code"> <pre>eval(`(${[1,2]})`);<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">2</span></pre> </div> <p>　　还遇到个问题，那就是在用<span style="color: rgba(51, 102, 255, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"  target="_blank" rel="nofollow"><span style="color: rgba(51, 102, 255, 1)">JSON.stringify()</span></a></span>&nbsp;序列化对象时，若参数是函数，那么就会被过滤掉。</p> <div class="cnblogs_code"> <pre>JSON.stringify({func:() =&gt; {}});  //"{}"</pre> </div> <p><span style="font-size: 16px"><strong>1）物料库</strong></span></p> <p>　　物料库中的组件分为两种，一种是自定义的<span style="color: rgba(51, 102, 255, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/pwstrick/shin-admin/blob/main/docs/template.md"  target="_blank" rel="nofollow"><span style="color: rgba(51, 102, 255, 1)">后台模板组件</span></a></span>，另一种是第三方的<span style="color: rgba(51, 102, 255, 1)"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://3x.ant.design/docs/react/introduce-cn"  target="_blank" rel="nofollow"><span style="color: rgba(51, 102, 255, 1)">Ant Design 3.X</span></a></span>组件。</p> <p>　　为了快速搭建页面，选择的组件是前者。这次顺便用TypeScript，再次完善了组件代码的类型声明。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/aa072c9bfb38f2243b69f4f4fbc7e411.jpg" alt="Node.js躬行记半吊子的可视化搭建系统" width="500"/></p> <p>　　后者只是用来文档查询和在模板字符串中拼接引入语句，如下所示。</p> <div class="cnblogs_code"> <pre>`import { ${antds.join(',')} } from 'antd';`</pre> </div> <p><span style="font-size: 16px"><strong>2）自定义组件</strong></span></p> <p>　　自定义组件的声明采用JSON格式，TypeScript声明的类型如下所示。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">interface OptionsType {   value: string;   label: string;   children: Array</span>&lt;<span style="color: rgba(0, 0, 0, 1)">{     value: string;     label: string;     link: string;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">链接地址</span>     readonlyProps?: ObjectType;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">会影响组件的呈现，并且不能配置的属性</span>     readonlyStrProps?: string;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">待拼接的字符串属性</span>     handleProps?: (values:ObjectType) =&gt; ObjectType;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">在格式化表单数据后，再处理特定的组件属性</span>     handleStrProps?: (values:ObjectType) =&gt; string;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">拼接无法转换成字符串的属性</span>     props: Array&lt;<span style="color: rgba(0, 0, 0, 1)">{       label: string;       name: string;       params</span>?<span style="color: rgba(0, 0, 0, 1)">: ObjectType;       control: JSX.Element</span>| ((index: number) =&gt;<span style="color: rgba(0, 0, 0, 1)"> JSX.Element);       type</span>?<span style="color: rgba(0, 0, 0, 1)">: string;       initControl</span>?: (props:any) =&gt;<span style="color: rgba(0, 0, 0, 1)"> JSX.Element;     }</span>&gt;<span style="color: rgba(0, 0, 0, 1)">   }</span>&gt;<span style="color: rgba(0, 0, 0, 1)">; }</span></pre> </div> <p>　　链接地址就是说明文档的地址，在组件的属性中，有一部分是回调函数，而目前已经舍弃了自定义的回调逻辑。</p> <p>　　所以这部分属性要特殊处理（声明在&nbsp;readonlyProps），不能在界面中输入。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">        readonlyProps: {           initPanes: (record: ObjectType): TabPaneType[]</span>=&gt;<span style="color: rgba(0, 0, 0, 1)"> [             {               name:</span>"示例"<span style="color: rgba(0, 0, 0, 1)">,               key:</span>"demo"<span style="color: rgba(0, 0, 0, 1)">,               controls: [                 { label:</span>'测试组件', control: &lt;&gt;内容&lt;/&gt; }<span style="color: rgba(0, 0, 0, 1)">              ]             },           ],         },</span></pre> </div> <p>　　readonlyStrProps 就是&nbsp;readonlyProps 对应的字符串格式，该属性还会增加一些其它属性，配上注释，也相当于是份组件文档了。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">        readonlyStrProps: `,</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 标签栏内容回调函数，参数为 record，当标签栏只有一项时，将不显示菜单</span>         "initPanes": (record: ObjectType): TabPaneType[] =&gt;<span style="color: rgba(0, 0, 0, 1)"> [           {             name:</span>"示例"<span style="color: rgba(0, 0, 0, 1)">,             key:</span>"demo"<span style="color: rgba(0, 0, 0, 1)">,             controls: [               { label:</span>'测试组件', control: &lt;&gt;内容&lt;/&gt; }<span style="color: rgba(0, 0, 0, 1)">            ]           },         ],</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> useEffect钩子中的回调函数，参数是 record</span>         "effectCallback": (record: ObjectType) =&gt; {}`,</pre> </div> <p>　　handleProps() 是一个回调函数，在表单接收到数据后，有些组件需要再做一次特殊的处理。</p> <p>　　例如加些特定属性、数组元素合并成字符串等，从而才能顺利的在预览界面呈现。</p> <div class="cnblogs_code"> <pre>        handleProps: (values:ObjectType) =&gt; {<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">对表单中的值做处理</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 对接口数组做特殊处理,从['api', 'get']转换成api.get</span>           values.url &amp;&amp; (values.url = values.url.join('.'<span style="color: rgba(0, 0, 0, 1)">));</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 初始化表单需要的组件</span><span style="color: rgba(0, 0, 255, 1)">if</span>(values.controls.length === 0<span style="color: rgba(0, 0, 0, 1)">) {             values.controls</span>=<span style="color: rgba(0, 0, 0, 1)"> [               {                 label:</span>"示例"<span style="color: rgba(0, 0, 0, 1)">,                 name:</span>"demo"<span style="color: rgba(0, 0, 0, 1)">,                 control:</span>&lt;&gt;测试组件&lt;/&gt;<span style="color: rgba(0, 0, 0, 1)">              },             ];           }</span><span style="color: rgba(0, 0, 255, 1)">else</span><span style="color: rgba(0, 0, 0, 1)"> {             values.originControls</span>= values.controls;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">备份组件名称数组</span>             values.controls = values.controls.map((item:string) =&gt;<span style="color: rgba(0, 0, 0, 1)"> getControls(item));           }</span><span style="color: rgba(0, 0, 255, 1)">delete</span> values.controlskeys;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">删除冗余属性</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> values;         },</span></pre> </div> <p>　　handleStrProps() 是在输出模板时使用，将那些特殊属性写成字符串形式。</p> <div class="cnblogs_code"> <pre>        handleStrProps: (values:ObjectType):string =&gt;<span style="color: rgba(0, 0, 0, 1)"> {</span><span style="color: rgba(0, 0, 255, 1)">if</span>(values.controls.length === 0<span style="color: rgba(0, 0, 0, 1)">) {</span><span style="color: rgba(0, 0, 255, 1)">delete</span> values.originControls;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">删除备份数组</span><span style="color: rgba(0, 0, 255, 1)">delete</span> values.controls;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">删除原始属性</span><span style="color: rgba(0, 0, 255, 1)">return</span> `,"controls"<span style="color: rgba(0, 0, 0, 1)">: [               {                 label:</span>"示例"<span style="color: rgba(0, 0, 0, 1)">,                 name:</span>"demo"<span style="color: rgba(0, 0, 0, 1)">,                 control:</span>&lt;&gt;测试组件&lt;/&gt;<span style="color: rgba(0, 0, 0, 1)">              },             ]`;           }</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 组件名称数组处理</span>           const newControls = values.originControls.map((item:string) =&gt;<span style="color: rgba(0, 0, 0, 1)"> getStrControls(item));</span><span style="color: rgba(0, 0, 255, 1)">delete</span><span style="color: rgba(0, 0, 0, 1)"> values.originControls;</span><span style="color: rgba(0, 0, 255, 1)">delete</span><span style="color: rgba(0, 0, 0, 1)"> values.controls;</span><span style="color: rgba(0, 0, 255, 1)">return</span> `,"controls": [${newControls.join(','<span style="color: rgba(0, 0, 0, 1)">)}]`;         },</span></pre> </div> <p>　　在经过一系列的处理后，将一些字符串代码传递给接口，接口最后拼接成两个文件，输出到指定目录中。</p> <p>　　不过生成的代码，排版有点混乱，每次都还需要手动格式化一下。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-33750.htm">宠物粮食销售 宠物粮食销售需要许可证吗</a></p>
                                        <p>下一个：<a href="/news/article-34228.htm">一片枫叶打一成语有哪些字（一片枫叶猜成语）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-9-5-free-high-speed-nodes.htm" title="「9月5日」最高速度19.3M/S，2024年HiddifyNext每天更新免费节点订阅链接">「9月5日」最高速度19.3M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-12-free-node-subscribe-links.htm" title="「8月12日」最高速度22.1M/S，2024年HiddifyNext每天更新免费节点订阅链接">「8月12日」最高速度22.1M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-13-hiddify-next-node-share.htm" title="「10月13日」最高速度18M/S，2024年HiddifyNext每天更新免费节点订阅链接">「10月13日」最高速度18M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-20208.htm" title="基于docker部署Oracle 19c的详细记录_docker">基于docker部署Oracle 19c的详细记录_docker</a></li>
                        <li class="py-2"><a href="/news/article-25273.htm" title="kubeadm 搭建 K8s">kubeadm 搭建 K8s</a></li>
                        <li class="py-2"><a href="/news/article-26663.htm" title="Springboot中整合knife4j接口文档">Springboot中整合knife4j接口文档</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-5-hiddify-next-node-share.htm" title="「11月5日」最高速度22.1M/S，2024年HiddifyNext每天更新免费节点订阅链接">「11月5日」最高速度22.1M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-29-free-node-subscribe-links.htm" title="「9月29日」最高速度21.2M/S，2024年HiddifyNext每天更新免费节点订阅链接">「9月29日」最高速度21.2M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-31858.htm" title="动物防疫站在哪里办公的（动物防疫站是什么编制）">动物防疫站在哪里办公的（动物防疫站是什么编制）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-23-node-share.htm" title="「12月23日」最高速度19.1M/S，2024年HiddifyNext每天更新免费节点订阅链接">「12月23日」最高速度19.1M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">24</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <div class="footer-bottom py-3 text-center">
        <div class="container-lg">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <p class="m-0">
                HiddifyNextGithub免费节点官网 版权所有 Powered by WordPress
            </p>
        </div>
    </div>
    <script src="/assets/website/js/frontend/hiddifynextgithub/jquery-1.11.0.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.2/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/10.3.1/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextgithub/plugins.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextgithub/script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>