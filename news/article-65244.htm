<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hiddifynextgithub.github.io/news/article-65244.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <title>SpringBoot重点详解&#8211;使用JPA操作数据库</title>
        <meta name="description" content="目录 JPA &amp; Spring Data JPA 配置Maven依赖 配置数据源和JPA 创建POJO实体 数据持久化 使用Spring Data JPA接口（方式一） CrudReposit" />
        <link rel="icon" href="/assets/website/img/hiddifynextgithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="HiddifyNextGithub免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hiddifynextgithub.github.io/news/article-65244.htm" />
    <meta property="og:site_name" content="HiddifyNextGithub免费节点官网" />
    <meta property="og:title" content="SpringBoot重点详解&#8211;使用JPA操作数据库" />
    <meta property="og:image" content="https://hiddifynextgithub.github.io/uploads/20240808-2/1e8b04de8992a6b3b74b5c49b0d8919a.webp" />
        <meta property="og:release_date" content="2025-03-01T06:59:38" />
    <meta property="og:updated_time" content="2025-03-01T06:59:38" />
        <meta property="og:description" content="目录 JPA &amp; Spring Data JPA 配置Maven依赖 配置数据源和JPA 创建POJO实体 数据持久化 使用Spring Data JPA接口（方式一） CrudReposit" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="SpringBoot重点详解&#8211;使用JPA操作数据库">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://cdn.bootcdn.net">
    <link rel="dns-prefetch" href="https://fonts.gstatic.com">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/Swiper/10.3.1/swiper-bundle.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/hiddifynextgithub/vendor.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/hiddifynextgithub/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-LL7EDWRR8Q"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-LL7EDWRR8Q');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol xmlns="http://www.w3.org/2000/svg" id="navbar-icon" viewBox="0 0 16 16">
            <path d="M14 10.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 .5-.5zm0-3a.5.5 0 0 0-.5-.5h-7a.5.5 0 0 0 0 1h7a.5.5 0 0 0 .5-.5zm0-3a.5.5 0 0 0-.5-.5h-11a.5.5 0 0 0 0 1h11a.5.5 0 0 0 .5-.5z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="facebook" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22 12c0-5.52-4.48-10-10-10S2 6.48 2 12c0 4.84 3.44 8.87 8 9.8V15H8v-3h2V9.5C10 7.57 11.57 6 13.5 6H16v3h-2c-.55 0-1 .45-1 1v2h3v3h-3v6.95c5.05-.5 9-4.76 9-9.95z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="youtube" viewBox="0 0 32 32">
            <path fill="currentColor" d="M29.41 9.26a3.5 3.5 0 0 0-2.47-2.47C24.76 6.2 16 6.2 16 6.2s-8.76 0-10.94.59a3.5 3.5 0 0 0-2.47 2.47A36.13 36.13 0 0 0 2 16a36.13 36.13 0 0 0 .59 6.74a3.5 3.5 0 0 0 2.47 2.47c2.18.59 10.94.59 10.94.59s8.76 0 10.94-.59a3.5 3.5 0 0 0 2.47-2.47A36.13 36.13 0 0 0 30 16a36.13 36.13 0 0 0-.59-6.74ZM13.2 20.2v-8.4l7.27 4.2Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="instagram" viewBox="0 0 256 256">
            <path fill="currentColor" d="M128 80a48 48 0 1 0 48 48a48.05 48.05 0 0 0-48-48Zm0 80a32 32 0 1 1 32-32a32 32 0 0 1-32 32Zm48-136H80a56.06 56.06 0 0 0-56 56v96a56.06 56.06 0 0 0 56 56h96a56.06 56.06 0 0 0 56-56V80a56.06 56.06 0 0 0-56-56Zm40 152a40 40 0 0 1-40 40H80a40 40 0 0 1-40-40V80a40 40 0 0 1 40-40h96a40 40 0 0 1 40 40ZM192 76a12 12 0 1 1-12-12a12 12 0 0 1 12 12Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="twitter" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22.46 6c-.77.35-1.6.58-2.46.69c.88-.53 1.56-1.37 1.88-2.38c-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29c0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15c0 1.49.75 2.81 1.91 3.56c-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07a4.28 4.28 0 0 0 4 2.98a8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21C16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56c.84-.6 1.56-1.36 2.14-2.23Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="linkedin" viewBox="0 0 512 512">
            <path fill="currentColor" d="M444.17 32H70.28C49.85 32 32 46.7 32 66.89v374.72C32 461.91 49.85 480 70.28 480h373.78c20.54 0 35.94-18.21 35.94-38.39V66.89C480.12 46.7 464.6 32 444.17 32Zm-273.3 373.43h-64.18V205.88h64.18ZM141 175.54h-.46c-20.54 0-33.84-15.29-33.84-34.43c0-19.49 13.65-34.42 34.65-34.42s33.85 14.82 34.31 34.42c-.01 19.14-13.31 34.43-34.66 34.43Zm264.43 229.89h-64.18V296.32c0-26.14-9.34-44-32.56-44c-17.74 0-28.24 12-32.91 23.69c-1.75 4.2-2.22 9.92-2.22 15.76v113.66h-64.18V205.88h64.18v27.77c9.34-13.3 23.93-32.44 57.88-32.44c42.13 0 74 27.77 74 87.64Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="arrow-down" viewBox="0 0 32 32">
            <path fill="currentColor" d="M24.59 16.59L17 24.17V4h-2v20.17l-7.59-7.58L6 18l10 10l10-10l-1.41-1.41z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="cart" viewBox="0 0 512 512">
            <path fill="currentColor" d="M160 96.039v32h304v63.345l-35.5 112.655H149.932L109.932 16H16v32h66.068l40 288.039h329.9L496 196.306V96.039H160zm16.984 272.305a64.073 64.073 0 0 0-64 64a64 64 0 0 0 128 0a64.072 64.072 0 0 0-64-64Zm0 96a32 32 0 1 1 32-32a32.038 32.038 0 0 1-32 32Zm224-96a64.073 64.073 0 0 0-64 64a64 64 0 0 0 128 0a64.072 64.072 0 0 0-64-64Zm0 96a32 32 0 1 1 32-32a32.038 32.038 0 0 1-32 32Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="balloon" viewBox="0 0 24 24">
            <g fill="none" stroke="currentColor" stroke-linecap="round" stroke-width="1.5">
                <path d="M8 16.607c1.15.86 2.518 1.38 4 1.393c4.142.034 7.594-3.92 7.56-8.196C19.527 5.53 16.142 2.034 12 2c-4.142-.034-7.473 3.404-7.44 7.68A8.88 8.88 0 0 0 5.244 13" />
                <path d="M15.5 9a3.035 3.035 0 0 0-3-3M12 20.35c.321 0 .482 0 .593-.022c.654-.128 1.051-.772.858-1.39c-.033-.105-.109-.242-.261-.515M12 20.35c-.321 0-.482 0-.593-.022c-.654-.128-1.051-.772-.858-1.39c.033-.105.109-.242.261-.515M12 20.35v2.15" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="bag-heart" viewBox="0 0 24 24">
            <g fill="none">
                <path fill="currentColor" d="m12 12.191l-.519.542a.75.75 0 0 0 1.038 0L12 12.191Zm-.957 3.675l-.444.604l.444-.604Zm1.914 0l-.444-.605l.444.605Zm-.957.462v.75v-.75Zm-.514-1.067c-.417-.307-.878-.69-1.227-1.093c-.368-.426-.509-.757-.509-.971h-1.5c0 .77.441 1.45.875 1.952c.453.525 1.014.984 1.474 1.321l.887-1.21ZM9.75 13.197c0-.576.263-.827.492-.907c.25-.088.714-.06 1.24.443l1.037-1.083c-.825-.79-1.861-1.096-2.773-.776c-.934.327-1.496 1.226-1.496 2.323h1.5Zm3.65 3.273c.46-.337 1.022-.796 1.475-1.32c.434-.502.875-1.183.875-1.953h-1.5c0 .214-.141.545-.51.971c-.348.403-.809.786-1.226 1.093l.887 1.21Zm2.35-3.273c0-1.097-.563-1.996-1.496-2.323c-.912-.32-1.948-.014-2.773.776l1.038 1.083c.525-.503.989-.531 1.24-.443c.228.08.491.33.491.907h1.5ZM10.6 16.47c.368.27.782.608 1.4.608v-1.5c-.024 0-.04 0-.094-.03a4 4 0 0 1-.42-.287l-.887 1.21Zm1.914-1.21a4 4 0 0 1-.42.289c-.054.029-.07.029-.094.029v1.5c.618 0 1.032-.337 1.4-.608l-.886-1.21Z" />
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M9 6V5a3 3 0 1 1 6 0v1m5.224 6.526c-.586-3.121-.878-4.682-1.99-5.604C17.125 6 15.537 6 12.36 6h-.72c-3.176 0-4.764 0-5.875.922c-1.11.922-1.403 2.483-1.989 5.604c-.823 4.389-1.234 6.583-.034 8.029C4.942 22 7.174 22 11.639 22h.722c4.465 0 6.698 0 7.897-1.445c.696-.84.85-1.93.696-3.555" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="handiplast" viewBox="0 0 24 24">
            <g fill="none">
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="M13.5 7.642L9.071 3.213a4.142 4.142 0 0 0-5.858 5.858L14.93 20.787a4.142 4.142 0 0 0 5.858-5.858l-4.358-4.358" />
                <path stroke="currentColor" stroke-linecap="round" stroke-width="1.5" d="m12 17.858l-2.929 2.929A4.142 4.142 0 0 1 2.596 20m3.546-8l-2.929 2.929c-.322.322-.58.685-.774 1.071M12 6.142l2.929-2.929a4.142 4.142 0 1 1 5.858 5.858L17.857 12" />
                <path fill="currentColor" d="M15.841 12.871a.788.788 0 1 1-1.114 1.114a.788.788 0 0 1 1.114-1.114Zm-3.712-3.712a.787.787 0 1 0-1.114 1.114a.787.787 0 0 0 1.114-1.114Zm4.641 6.497a.787.787 0 1 1-1.114 1.114a.787.787 0 0 1 1.114-1.114ZM9.345 8.23A.788.788 0 1 0 8.23 9.346A.788.788 0 0 0 9.345 8.23Zm3.712 3.713a.787.787 0 1 1-1.113 1.114a.787.787 0 0 1 1.113-1.114Zm.928 2.785a.788.788 0 1 1-1.114 1.113a.788.788 0 0 1 1.114-1.113Zm-3.712-3.713a.787.787 0 1 0-1.114 1.114a.787.787 0 0 0 1.114-1.114Z" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="star-fill" viewBox="0 0 16 16">
            <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="star-empty" viewBox="0 0 16 16">
            <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="play" viewBox="0 0 32 32">
            <path fill="currentColor" d="M7 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.482-.876l20 11a1 1 0 0 1 0 1.752l-20 11A1 1 0 0 1 7 28ZM8 6.69v18.62L24.925 16Z" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="call-chat" viewBox="0 0 24 24">
            <path fill="currentColor" fill-rule="evenodd" d="M17 2.75a4.25 4.25 0 0 0-3.807 6.142c.16.32.225.71.12 1.102l-.253.946l.946-.253a1.567 1.567 0 0 1 1.102.12A4.25 4.25 0 1 0 17 2.75ZM11.25 7a5.75 5.75 0 1 1 3.19 5.15a.126.126 0 0 0-.04-.013h-.007l-1.112.297a1.4 1.4 0 0 1-1.715-1.714l.298-1.113V9.6a.126.126 0 0 0-.014-.04a5.73 5.73 0 0 1-.6-2.56ZM3.718 4.092c1.226-1.29 3.254-1.049 4.268.385l1.26 1.783c.811 1.147.743 2.74-.225 3.76l-.245.257c0 .002 0 .004-.002.006c-.013.037-.045.152-.013.372c.067.456.418 1.381 1.846 2.884c1.432 1.508 2.3 1.864 2.703 1.929a.608.608 0 0 0 .294-.007l.408-.43c.874-.92 2.236-1.101 3.335-.469l1.91 1.1c1.633.94 2.013 3.239.708 4.613l-1.42 1.495c-.443.467-1.048.866-1.795.94c-1.824.18-6.049-.055-10.478-4.718c-4.134-4.352-4.919-8.137-5.018-9.986c-.049-.914.358-1.697.894-2.261l.544.516l-.544-.516l1.57-1.653Zm3.043 1.25c-.512-.724-1.433-.767-1.956-.217l-1.57 1.653c-.33.349-.505.748-.483 1.148c.08 1.51.731 4.952 4.607 9.033c4.064 4.279 7.809 4.4 9.244 4.258c.283-.028.575-.186.854-.48l1.42-1.495c.614-.645.453-1.808-.368-2.28l-1.91-1.1c-.513-.295-1.114-.204-1.499.202l-.455.48l-.544-.517c.543.517.543.517.542.518l-.001.002l-.003.003l-.007.006l-.014.014a1.003 1.003 0 0 1-.136.112c-.08.057-.186.12-.321.172c-.276.11-.64.168-1.091.095c-.878-.143-2.028-.773-3.55-2.377c-1.528-1.608-2.113-2.807-2.243-3.7c-.067-.454-.014-.817.084-1.092a1.592 1.592 0 0 1 .23-.427l.03-.037l.014-.015l.006-.006l.003-.003l.002-.002s.001-.001.545.515l-.544-.516l.287-.302c.445-.47.51-1.264.088-1.86L6.76 5.342Z" clip-rule="evenodd" />
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="mail" viewBox="0 0 21 21">
            <g fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3.5 6.5v8a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-8a2 2 0 0 0-2-2h-10a2 2 0 0 0-2 2z" />
                <path d="m5.5 7.5l5 3l5-3" />
            </g>
        </symbol>
        <symbol xmlns="http://www.w3.org/2000/svg" id="location" viewBox="0 0 24 24">
            <path fill="currentColor" fill-rule="evenodd" d="M5.25 7.7c0-3.598 3.059-6.45 6.75-6.45c3.608 0 6.612 2.725 6.745 6.208l.478.16c.463.153.87.289 1.191.439c.348.162.667.37.911.709c.244.338.341.707.385 1.088c.04.353.04.78.04 1.269v5.748c0 .61 0 1.13-.047 1.547c-.05.438-.161.87-.463 1.237a2.25 2.25 0 0 1-.62.525c-.412.237-.855.276-1.296.253c-.42-.022-.933-.107-1.534-.208l-.041-.007c-1.293-.215-1.814-.296-2.322-.254a4.3 4.3 0 0 0-.552.083c-.498.109-.976.342-2.159.933l-.122.061c-1.383.692-2.234 1.118-3.154 1.251c-.276.04-.555.06-.835.06c-.928-.002-1.825-.301-3.28-.786a73.75 73.75 0 0 1-.127-.043l-.384-.128l-.037-.012c-.463-.154-.87-.29-1.191-.44c-.348-.162-.667-.37-.911-.709c-.244-.338-.341-.707-.385-1.088c-.04-.353-.04-.78-.04-1.269v-5.02c0-.786 0-1.448.067-1.967c.07-.542.23-1.072.666-1.47a2.25 2.25 0 0 1 .42-.304c.517-.287 1.07-.27 1.605-.166c.11.021.223.047.342.078c-.066-.446-.1-.89-.1-1.328Zm.499 3.01a9.414 9.414 0 0 0-1.028-.288c-.395-.077-.525-.03-.586.004a.747.747 0 0 0-.14.101c-.053.048-.138.156-.19.556c-.053.41-.055.974-.055 1.825v4.93c0 .539.001.88.03 1.138c.028.238.072.327.112.381c.039.055.109.125.326.226c.236.11.56.219 1.07.39l.384.127c1.624.541 2.279.75 2.936.752c.207 0 .413-.015.617-.044c.65-.094 1.276-.397 2.82-1.17l.093-.046c1.06-.53 1.714-.857 2.417-1.01c.246-.054.496-.092.747-.113c.717-.06 1.432.06 2.593.253l.1.017c.655.109 1.083.18 1.407.196c.312.016.419-.025.471-.055a.749.749 0 0 0 .207-.175c.039-.047.097-.146.132-.456c.037-.323.038-.757.038-1.42v-5.667c0-.539-.001-.88-.03-1.138c-.028-.238-.072-.327-.112-.381c-.039-.055-.109-.125-.326-.226c-.236-.11-.56-.219-1.07-.39l-.06-.019a10.701 10.701 0 0 1-1.335 3.788c-.912 1.568-2.247 2.934-3.92 3.663a3.505 3.505 0 0 1-2.794 0c-1.673-.73-3.008-2.095-3.92-3.663a10.856 10.856 0 0 1-.934-2.087ZM12 2.75c-2.936 0-5.25 2.252-5.25 4.95c0 1.418.437 2.98 1.23 4.341c.791 1.362 1.908 2.47 3.223 3.044c.505.22 1.089.22 1.594 0c1.316-.574 2.432-1.682 3.224-3.044c.792-1.36 1.229-2.923 1.229-4.34c0-2.699-2.314-4.951-5.25-4.951Zm0 4a1.25 1.25 0 1 0 0 2.5a1.25 1.25 0 0 0 0-2.5ZM9.25 8a2.75 2.75 0 1 1 5.5 0a2.75 2.75 0 0 1-5.5 0Z" clip-rule="evenodd" />
        </symbol>
    </svg>
    <header id="header" class="site-header position-fixed z-2 w-100 border-bottom mb-5">
        <nav id="header-nav" class="navbar navbar-expand-lg py-3">
            <div class="container-lg">
                <a class="navbar-brand pb-4" href="/">
                                <span>Hiddify Next Github</span>
                                </a>
                <button class="navbar-toggler d-flex d-lg-none order-3 p-2 border-0 shadow-none bg-white" type="button" data-bs-toggle="offcanvas" data-bs-target="#bdNavbar" aria-controls="bdNavbar" aria-expanded="false" aria-label="Toggle navigation">
                    <svg class="navbar-icon" width="50" height="50">
                        <use xlink:href="#navbar-icon"></use>
                    </svg>
                </button>
                <div class="offcanvas offcanvas-end" tabindex="-1" id="bdNavbar" aria-labelledby="bdNavbarOffcanvasLabel">
                    <div class="offcanvas-header px-4 pb-0">
                        <button type="button" class="btn-close btn-close-black" data-bs-dismiss="offcanvas" aria-label="Close" data-bs-target="#bdNavbar"></button>
                    </div>
                    <div class="offcanvas-body">
                        <ul class="navbar-nav scrollspy-nav justify-content-end flex-grow-1 gap-lg-5 pe-3">
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/client.htm">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link text-dark" href="/news/">新闻资讯</a>
                            </li>
                                                        
                            <span class="scrollspy-indicator"></span>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <section id="intro" class="scrollspy-section bg-light" style="background: url(/assets/website/img/hiddifynextgithub/bg-pattern.png) no-repeat;background-size: cover;">
        <div class="container-lg py-5">
            <div class="row justify-content-center py-5">
                <div class="col-lg-10 text-center">
                    <h1 class="display-2 fw-bold mt-5 pt-5">SpringBoot重点详解&#8211;使用JPA操作数据库</h1>
                    <nav class="breadcrumb justify-content-center">
                        <a class="breadcrumb-item" href="/">首页</a>
                        <a class="breadcrumb-item" href="/news/">新闻资讯</a>
                        <span class="breadcrumb-item active" aria-current="page">正文</span>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <section id="why" class="scrollspy-section py-5 my-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="JPA%20%26%20Spring%20Data%20JPA-toc" style="margin-left:0px;"><a href="#JPA%20%26%20Spring%20Data%20JPA" rel="nofollow">JPA &amp; Spring Data JPA</a></p> <p id="%E9%85%8D%E7%BD%AEMaven%E4%BE%9D%E8%B5%96-toc" style="margin-left:0px;"><a href="#%E9%85%8D%E7%BD%AEMaven%E4%BE%9D%E8%B5%96" rel="nofollow">配置Maven依赖</a></p> <p id="%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E6%BA%90%E5%92%8CJPA-toc" style="margin-left:0px;"><a href="#%E9%85%8D%E7%BD%AE%E6%95%B0%E6%8D%AE%E6%BA%90%E5%92%8CJPA" rel="nofollow">配置数据源和JPA</a></p> <p id="%E5%88%9B%E5%BB%BAPOJO%E5%AE%9E%E4%BD%93-toc" style="margin-left:0px;"><a href="#%E5%88%9B%E5%BB%BAPOJO%E5%AE%9E%E4%BD%93" rel="nofollow">创建POJO实体</a></p> <p id="%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96-toc" style="margin-left:0px;"><a href="#%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96" rel="nofollow">数据持久化</a></p> <p id="%E4%BD%BF%E7%94%A8Spring%20Data%20JPA%E6%8E%A5%E5%8F%A3%EF%BC%88%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%89-toc" style="margin-left:40px;"><a href="#%E4%BD%BF%E7%94%A8Spring%20Data%20JPA%E6%8E%A5%E5%8F%A3%EF%BC%88%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%89" rel="nofollow">使用Spring Data JPA接口（方式一）</a></p> <p id="CrudRepository-toc" style="margin-left:80px;"><a href="#CrudRepository" rel="nofollow">CrudRepository</a></p> <p id="PagingAndSortingRepository-toc" style="margin-left:80px;"><a href="#PagingAndSortingRepository" rel="nofollow">PagingAndSortingRepository</a></p> <p id="JpaRepository-toc" style="margin-left:80px;"><a href="#JpaRepository" rel="nofollow">JpaRepository</a></p> <p id="QueryByExampleExecutor-toc" style="margin-left:80px;"><a href="#QueryByExampleExecutor" rel="nofollow">QueryByExampleExecutor</a></p> <p id="%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9F%A5%E8%AF%A2%E6%96%B9%E6%B3%95%EF%BC%88%E6%96%B9%E5%BC%8F%E4%BA%8C%EF%BC%89-toc" style="margin-left:40px;"><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9F%A5%E8%AF%A2%E6%96%B9%E6%B3%95%EF%BC%88%E6%96%B9%E5%BC%8F%E4%BA%8C%EF%BC%89" rel="nofollow">自定义查询方法（方式二）</a></p> <p id="JUnit%E6%B5%8B%E8%AF%95-toc" style="margin-left:0px;"><a href="#JUnit%E6%B5%8B%E8%AF%95" rel="nofollow">JUnit测试</a></p> <hr id="hr-toc"/> <p style="text-indent:50px;">使用数据库是开发基本应用的基础，借助于开发框架，我们已经不用编写原始的访问数据库的代码，也不用调用JDBC（Java Data Base Connectivity）或者连接池等诸如此类的被称作底层的代码，我们将从更高的层次上访问数据库，这在Springboot中更是如此，本章我们将详细介绍在Springboot中使用 Spring Data JPA 来实现对数据库的操作。</p> </h1> <p style="text-indent:50px;">JPA是Java Persistence API的简称，中文名Java持久层API，是Sun官方提出的Java持久化规范，其设计目标主要是为了简化现有的持久化开发工作和整合ORM技术。JPA使用XML文件或注解（JDK 5.0或更高版本）来描述对象-关联表的映射关系，能够将运行期的实体对象持久化到数据库，它为Java开发人员提供了一种ORM工具来管理Java应用中的关系数据。 简单地说，JPA就是为POJO（Plain Ordinary Java Object）提供持久化的标准规范，即将Java的普通对象通过对象关系映射（Object-Relational Mapping，ORM）持久化到数据库中。由于JPA是在充分吸收了现有Hibernate，TopLink，JDO等ORM框架的基础上发展而来的，因而具有易于使用、伸缩性强等优点。</p> <p style="text-indent:50px;">Spring Data JPA 是 Spring 基于 Spring Data 框架、在JPA 规范的基础上开发的一个框架，使用 Spring Data JPA 可以极大地简化JPA 的写法，可以在几乎不用写实现的情况下实现对数据库的访问和操作，除了CRUD外，还包括分页和排序等一些常用的功能。</p> </h1> <p style="text-indent:50px;">以MySQL数据库为例，为了使用JPA和MySQL，首先在工程中引入它们的Maven依赖。</p> <pre class="has"><code class="language-html">	&lt;parent&gt; 		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; 		&lt;version&gt;1.5.1.RELEASE&lt;/version&gt; 	&lt;/parent&gt; 	&lt;dependencies&gt; 		&lt;dependency&gt; 			&lt;groupId&gt;mysql&lt;/groupId&gt; 			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; 		&lt;/dependency&gt; 		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; 			&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt; 		&lt;/dependency&gt; 		&lt;dependency&gt; 			&lt;groupId&gt;org.springframework&lt;/groupId&gt; 			&lt;artifactId&gt;spring-test&lt;/artifactId&gt; 		&lt;/dependency&gt; 	&lt;/dependencies&gt;</code></pre> </h1> <p style="text-indent:50px;">在Springboot核心配置文件 application.properties 中配置MySQL数据源和JPA。</p> <pre class="has"><code class="language-sql">######################################################## ### Spring datasource -- Datasource configuration. ######################################################## spring.datasource.url = jdbc:mysql://localhost:3306/mybatis?characterEncoding=UTF-8 spring.datasource.username = root spring.datasource.password = 123456 spring.datasource.driverClassName = com.mysql.jdbc.Driver spring.datasource.type = org.apache.tomcat.jdbc.pool.DataSource  ######################################################## ### Java Persistence Api --  Spring jpa configuration. ######################################################## # Specify the DBMS spring.jpa.database = MYSQL # Show or not log for each sql query spring.jpa.show-sql = true # Hibernate ddl auto (create, create-drop, update, validate, none) spring.jpa.hibernate.ddl-auto = update # Naming strategy #[org.hibernate.cfg.ImprovedNamingStrategy  #org.hibernate.cfg.DefaultNamingStrategy] spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy # stripped before adding them to the entity manager) spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect</code></pre> <p style="text-indent:50px;">其中，spring.jpa.hibernate.ddl-auto 参数用来配置是否开启自动更新数据库表结构，可取create、create-drop、update、validate、none五个值。</p> <ul> <li>create 每次加载hibernate时，先删除已存在的数据库表结构再重新生成；</li> <li>create-drop 每次加载hibernate时，先删除已存在的数据库表结构再重新生成，并且当 sessionFactory关闭时自动删除生成的数据库表结构；</li> <li>update 只在第一次加载hibernate时自动生成数据库表结构，以后再次加载hibernate时根据model类自动更新表结构；</li> <li>validate 每次加载hibernate时，验证数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。</li> <li>none 关闭自动更新</li> </ul> </h1> <p style="text-indent:50px;">首先创建一些普通对象，用来与数据库的表建立映射关系，在此我们只定义了员工和部门两个实体来进行示例。</p> <pre class="has"><code class="language-java">@Entity @Table(name = "tbl_employee") // 指定关联的数据库的表名 public class Employee implements Serializable {  	private static final long serialVersionUID = 1L;  	@Id 	@GeneratedValue(strategy = GenerationType.IDENTITY) 	private Long id; // 主键ID  	private String name; // 姓名  	@ManyToOne 	@JoinColumn(name = "department_id") 	private Department department; // 部门  	public Long getId() { 		return id; 	}  	public void setId(Long id) { 		this.id = id; 	}  	public String getName() { 		return name; 	}  	public void setName(String name) { 		this.name = name; 	}  	public Department getDepartment() { 		return department; 	}  	public void setDepartment(Department department) { 		this.department = department; 	}  }</code></pre> <pre class="has"><code class="language-java">@Entity @Table(name = "tbl_department") public class Department  implements Serializable{  	private static final long serialVersionUID = 1L;  	@Id 	@GeneratedValue(strategy = GenerationType.IDENTITY) 	private Long id; // 主键ID  	private String name; // 部门名称  	public Long getId() { 		return id; 	}  	public void setId(Long id) { 		this.id = id; 	}  	public String getName() { 		return name; 	}  	public void setName(String name) { 		this.name = name; 	}  }</code></pre> <p style="text-indent:50px;">其中，注解@Entity用来标记该类是一个JPA实体类，并使用了注解@Table指定关联的数据库的表名；注解@Id用来定义记录的唯一标识，并结合注解@GeneratedValue将其设置为自动生成。</p> </h1> <p style="text-indent:50px;">使用 JPA 进行数据持久化有两种实现方式。</p> <ul> <li>方式一：使用Spring Data JPA 提供的接口默认实现,</li> <li>方式二：自定义符合Spring Data JPA规则的查询方法，由框架将其自动解析为SQL。</li> </ul> <h2 id="%E4%BD%BF%E7%94%A8Spring%20Data%20JPA%E6%8E%A5%E5%8F%A3%EF%BC%88%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%89">使用Spring Data JPA接口（方式一）</h2> <p style="text-indent:50px;">Spring Data JPA提供了一些实现了基本的数据库操作的接口类，如下图所示。</p> <p style="text-align:center;"><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220603/08a0a026ee67ff710580ff9915996996.jpg"></p> <h3 id="CrudRepository">CrudRepository</h3> <p style="text-align:center;"><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220603/001290b2ba1b415d49e385a0c2825d12.jpg"></p> <p style="text-indent:50px;">CrudRepository提供了一些简单的增删查改功能，接口定义如下。</p> <pre class="has"><code class="language-java">package org.springframework.data.repository;  import java.io.Serializable;  @NoRepositoryBean public interface CrudRepository&lt;T, ID extends Serializable&gt; extends Repository&lt;T, ID&gt; {  	&lt;S extends T&gt; S save(S entity); // 保存并返回（修改后的）实体  	&lt;S extends T&gt; Iterable&lt;S&gt; save(Iterable&lt;S&gt; entities); // 保存并返回（修改后的）实体集合  	T findOne(ID id); // 根据ID获取实体  	boolean exists(ID id); // 判断指定ID的实体是否存在  	Iterable&lt;T&gt; findAll(); // 查询所有实体  	Iterable&lt;T&gt; findAll(Iterable&lt;ID&gt; ids); // 根据ID集合查询实体  	long count(); // 获取实体的数量  	void delete(ID id); // 删除指定ID的实体  	void delete(T entity); // 删除实体  	void delete(Iterable&lt;? extends T&gt; entities); // 删除实体集合  	void deleteAll(); // 删除所有实体 }</code></pre> <h3 id="PagingAndSortingRepository">PagingAndSortingRepository</h3> <p style="text-align:center;"><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220603/d2a009e1049d59378801ae638cb46381.jpg"></p> <p style="text-indent:50px;">PagingAndSortingRepository继承于CrudRepository，除了具有CrudRepository接口的能力外，还新增了分页和排序的功能，接口定义如下。</p> <pre class="has"><code class="language-java">package org.springframework.data.repository;  import java.io.Serializable;  import org.springframework.data.domain.Page; import org.springframework.data.domain.Pageable; import org.springframework.data.domain.Sort;  @NoRepositoryBean public interface PagingAndSortingRepository&lt;T, ID extends Serializable&gt; extends CrudRepository&lt;T, ID&gt; {  	Iterable&lt;T&gt; findAll(Sort sort); // 查询所有实体并排序  	Page&lt;T&gt; findAll(Pageable pageable); // 分页查询实体 }</code></pre> <h3 id="JpaRepository">JpaRepository</h3> <p style="text-align:center;"><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220603/86d1336413753e306985ff2684b4f34f.jpg"></p> <p style="text-indent:50px;">JpaRepository继承于PagingAndSortingRepository，所以它传递性地拥有了以上接口的所有方法，同时，它还继承了另外一个QueryByExampleExecutor接口，拥有了该接口匹配指定样例的能力，JpaRepository接口定义如下。</p> <pre class="has"><code class="language-java">package org.springframework.data.jpa.repository;  import java.io.Serializable; import java.util.List;  import javax.persistence.EntityManager;  import org.springframework.data.domain.Example; import org.springframework.data.domain.Sort; import org.springframework.data.repository.NoRepositoryBean; import org.springframework.data.repository.PagingAndSortingRepository; import org.springframework.data.repository.query.QueryByExampleExecutor;  @NoRepositoryBean public interface JpaRepository&lt;T, ID extends Serializable&gt; 		extends PagingAndSortingRepository&lt;T, ID&gt;, QueryByExampleExecutor&lt;T&gt; {  	List&lt;T&gt; findAll(); // 查询所有实体  	List&lt;T&gt; findAll(Sort sort); // 查询所有实体并排序  	List&lt;T&gt; findAll(Iterable&lt;ID&gt; ids); // 根据ID集合查询实体  	&lt;S extends T&gt; List&lt;S&gt; save(Iterable&lt;S&gt; entities); // 保存并返回（修改后的）实体集合  	void flush(); // 提交事务  	&lt;S extends T&gt; S saveAndFlush(S entity); // 保存实体并立即提交事务  	void deleteInBatch(Iterable&lt;T&gt; entities); // 批量删除实体集合  	void deleteAllInBatch();// 批量删除所有实体  	T getOne(ID id); // 根据ID查询实体  	@Override 	&lt;S extends T&gt; List&lt;S&gt; findAll(Example&lt;S&gt; example); // 查询与指定Example匹配的所有实体  	@Override 	&lt;S extends T&gt; List&lt;S&gt; findAll(Example&lt;S&gt; example, Sort sort);// 查询与指定Example匹配的所有实体并排序  }</code></pre> <h3 id="QueryByExampleExecutor">QueryByExampleExecutor</h3> <p style="text-align:center;"><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220603/e07263069950b368452c38143d0e23af.jpg"></p> <p style="text-indent:50px;">QueryByExampleExecutor接口允许开发者根据给定的样例执行查询操作，接口定义如下。</p> <pre class="has"><code class="language-java">package org.springframework.data.repository.query;  import org.springframework.data.domain.Example; import org.springframework.data.domain.Page; import org.springframework.data.domain.Pageable; import org.springframework.data.domain.Sort;  public interface QueryByExampleExecutor&lt;T&gt; {  	&lt;S extends T&gt; S findOne(Example&lt;S&gt; example); // 查询与指定Example匹配的唯一实体  	&lt;S extends T&gt; Iterable&lt;S&gt; findAll(Example&lt;S&gt; example); // 查询与指定Example匹配的所有实体  	&lt;S extends T&gt; Iterable&lt;S&gt; findAll(Example&lt;S&gt; example, Sort sort); // 查询与指定Example匹配的所有实体并排序  	&lt;S extends T&gt; Page&lt;S&gt; findAll(Example&lt;S&gt; example, Pageable pageable);// 分页查询与指定Example匹配的所有实体  	&lt;S extends T&gt; long count(Example&lt;S&gt; example); // 查询与指定Example匹配的实体数量  	&lt;S extends T&gt; boolean exists(Example&lt;S&gt; example); // 判断与指定Example匹配的实体是否存在 }</code></pre> <p style="text-indent:50px;">以部门实体资源库接口DepartmentRepository为例，只需继承CrudRepository接口便会自动拥有基础的增删查改功能，无须编写一条SQL。</p> <pre class="has"><code class="language-java">@Repository public interface DepartmentRepository extends CrudRepository&lt;Department, Long&gt; {  }</code></pre> <h2 id="%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9F%A5%E8%AF%A2%E6%96%B9%E6%B3%95%EF%BC%88%E6%96%B9%E5%BC%8F%E4%BA%8C%EF%BC%89">自定义查询方法（方式二）</h2> <p style="text-indent:50px;">除了可以直接使用Spring Data JPA接口提供的基础功能外，Spring Data JPA还允许开发者自定义查询方法，对于符合以下命名规则的方法，Spring Data JPA能够根据其方法名为其自动生成SQL，除了使用示例中的 find 关键字，还支持的关键字有：query、get、read、count、delete等。</p> <p style="text-align:center;"><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220603/1054b5a7de5f6337b874053fe4da93ea.jpg"></p> <p style="text-indent:50px;">另外，Spring Data JPA 还提供了对分页查询、自定义SQL、查询指定N条记录、联表查询等功能的支持，以员工实体资源库接口EmployeeRepository为例，功能代码示意如下。</p> <pre class="has"><code class="language-java">@Repository public interface EmployeeRepository extends JpaRepository&lt;Employee, Long&gt; {  	/** 	 * 根据部门ID获取员工数量 	 */ 	int countByDepartmentId(Long departmentId);  	/** 	 * 根据部门ID分页查询 	 */ 	Page&lt;Employee&gt; queryByDepartmentId(Long departmentId, Pageable pageable);  	/** 	 * 根据员工ID升序查询前10条 	 */ 	List&lt;Employee&gt; readTop10ByOrderById();  	/** 	 * 根据员工姓名取第一条记录 	 */ 	Employee getFirstByName(String name, Sort sort);  	/** 	 * 联表查询 	 */ 	@Query("select e.id as employeeId,e.name as employeeName,d.id as departmentId,d.name as departmentName from Employee e , Department d where e.id= ?1 and d.id= ?2") 	EmployeeDetail getEmployeeJoinDepartment(Long eid, Long did);  	/** 	 * 修改指定ID员工的姓名 	 */ 	@Modifying 	@Transactional(timeout = 10) 	@Query("update Employee e set e.name = ?1 where e.id = ?2") 	int modifyEmployeeNameById(String name, Long id);  	/** 	 * 删除指定ID的员工 	 */ 	@Transactional(timeout = 10) 	@Modifying 	@Query("delete from Employee where id = ?1") 	void deleteById(Long id);  }</code></pre> </h1> <p style="text-indent:50px;">为例验证上面接口的正确性，我们使用JUnit来进行测试，先增加一个JPA的配置类，代码如下。</p> <pre class="has"><code class="language-java">@Order(Ordered.HIGHEST_PRECEDENCE) @Configuration @EnableTransactionManagement(proxyTargetClass = true) @EnableJpaRepositories(basePackages = {"com.pengjunlee.repository"}) @EntityScan(basePackages = {"com.pengjunlee.entity"}) @EnableAutoConfiguration public class JpaConfiguration {  	@Bean 	PersistenceExceptionTranslationPostProcessor persistenceExceptionTranslationPostProcessor() { 		return new PersistenceExceptionTranslationPostProcessor(); 	} }</code></pre> <p style="text-indent:50px;">其中，@EnableTransactionManagement注解用来启用JPA事务管理，@EnableJpaRepositories注解用来启用JPA资源库发现，@EntityScan注解用来启用实体发现。</p> <p style="text-indent:50px;">配置类定义好之后，编写一个JUnit Test Case测试程序。</p> <pre class="has"><code class="language-java">@RunWith(SpringJUnit4ClassRunner.class) @ContextConfiguration(classes = JpaConfiguration.class) @TestPropertySource(locations = { "classpath:application.properties" }) public class JpaTest {  	@Autowired 	DepartmentRepository departmentRepository;  	@Autowired 	EmployeeRepository employeeRepository;  	@Test 	public void addDepartmentTest() {  	}  	@Test 	public void initData() { 		// 清空员工表中的数据 		employeeRepository.deleteAll(); 		// 清空部门表中的数据 		departmentRepository.deleteAll(); 		// 部门表中添加一个开发部 		Department dept1 = new Department(); 		dept1.setName("开发部"); 		departmentRepository.save(dept1); 		// 部门表中添加一个测试部 		Department dept2 = new Department(); 		dept2.setName("测试部"); 		departmentRepository.save(dept2);  		String[] names = new String[] { "lucy", "tom", "hanmeime", "jacky", "francky", "lilly", "xiaoming", "smith", 				"walt", "sherry" }; 		// 员工表中增加10条记录 		for (int i = 0; i &lt; 10; i++) { 			Employee emp = new Employee(); 			emp.setName(names[i]); 			if (i &lt; 5) { 				emp.setDepartment(dept1); 			} else { 				emp.setDepartment(dept2); 			} 			employeeRepository.save(emp); 		} 	}  	@Test 	public void testCountByDepartmentId() { 		int count = employeeRepository.countByDepartmentId(19L); 		System.out.println(count); 	}  	@Test 	public void testQueryByDepartmentId() { 		Pageable pageable = new PageRequest(0, 10, new Sort(Sort.Direction.ASC, "name")); 		Page&lt;Employee&gt; emps = employeeRepository.queryByDepartmentId(19L, pageable);  		for (Employee emp : emps.getContent()) { 			System.out.println("员工姓名：" + emp.getName() + "，所属部门：" + emp.getDepartment().getName()); 		} 	}  	@Test 	public void testReadTop10ByOrderById() { 		List&lt;Employee&gt; emps = employeeRepository.readTop10ByOrderById(); 		for (Employee emp : emps) { 			System.out.println("员工姓名：" + emp.getName() + "，所属部门：" + emp.getDepartment().getName()); 		} 	}  	@Test 	public void testGetFirstByName() { 		Employee emp = employeeRepository.getFirstByName("xiaoming", new Sort(Direction.ASC, "id")); 		System.out.println("员工姓名：" + emp.getName() + "，所属部门：" + emp.getDepartment().getName()); 	}  	@Test 	public void testGetEmployeeJoinDepartment() { 		EmployeeDetail empDetail = employeeRepository.getEmployeeJoinDepartment(5L, 19L); 		System.out.println("员工姓名：" + empDetail.getEmployeeName() + "，部门名称：" + empDetail.getDepartmentName()); 	}  	@Test 	public void testModifyEmployeeNameById() { 		employeeRepository.modifyEmployeeNameById("chris", 5L); 	}  	@Test 	public void testDeleteById() { 		employeeRepository.deleteById(11L); 	} }</code></pre> <p style="text-indent:50px;"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-64638.htm">喵咪驱虫怎么做的（猫驱虫使用方法）</a></p>
                                        <p>下一个：<a href="/news/article-65247.htm">动物诊所英文翻译（动物诊所英文翻译怎么说）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-14-free-subscribe-node.htm" title="「2月14日」最高速度22.4M/S，2025年HiddifyNext每天更新免费节点订阅链接">「2月14日」最高速度22.4M/S，2025年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-5-hiddify-next-windows.htm" title="「1月5日」最高速度18.3M/S，2025年HiddifyNext每天更新免费节点订阅链接">「1月5日」最高速度18.3M/S，2025年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-11-free-hiddify-next-node.htm" title="「11月11日」最高速度18.9M/S，2024年HiddifyNext每天更新免费节点订阅链接">「11月11日」最高速度18.9M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-19296.htm" title="中国宠物用品批发市场在哪里（国内宠物批发市场）">中国宠物用品批发市场在哪里（国内宠物批发市场）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-14-free-high-speed-nodes.htm" title="「11月14日」最高速度20.9M/S，2024年HiddifyNext每天更新免费节点订阅链接">「11月14日」最高速度20.9M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-59296.htm" title="哈尔滨王允海宠物医院怎么样啊电话多少（哈尔滨王云海动物医院）">哈尔滨王允海宠物医院怎么样啊电话多少（哈尔滨王云海动物医院）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-22-latest-hiddify-next-node.htm" title="「1月22日」最高速度22.2M/S，2025年HiddifyNext每天更新免费节点订阅链接">「1月22日」最高速度22.2M/S，2025年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-30890.htm" title="宠物医院好评模板100字开头和结尾 宠物医院好评模板100字开头和结尾怎么写">宠物医院好评模板100字开头和结尾 宠物医院好评模板100字开头和结尾怎么写</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-26-free-node-subscribe-links.htm" title="「12月26日」最高速度21.8M/S，2024年HiddifyNext每天更新免费节点订阅链接">「12月26日」最高速度21.8M/S，2024年HiddifyNext每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-31-latest-hiddify-next-node.htm" title="「1月31日」最高速度21M/S，2025年HiddifyNext每天更新免费节点订阅链接">「1月31日」最高速度21M/S，2025年HiddifyNext每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <div class="footer-bottom py-3 text-center">
        <div class="container-lg">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
            <p class="m-0">
                HiddifyNextGithub免费节点官网 版权所有 Powered by WordPress
            </p>
        </div>
    </div>
    <script src="/assets/website/js/frontend/hiddifynextgithub/jquery-1.11.0.min.js"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/5.3.2/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://cdn.bootcdn.net/ajax/libs/Swiper/10.3.1/swiper-bundle.min.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextgithub/plugins.js"></script>
    <script src="/assets/website/js/frontend/hiddifynextgithub/script.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>